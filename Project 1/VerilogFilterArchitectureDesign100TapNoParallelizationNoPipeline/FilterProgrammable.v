// -------------------------------------------------------------
//
// Module: FilterProgrammable
// Generated by MATLAB(R) 24.2 and Filter Design HDL Coder 24.2.
// Generated on: 2025-02-26 01:09:39
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// TargetDirectory: C:\Users\nievep\Downloads\Advanced VLSI Design\Project 1\REPO\Advanced-VLSI-Project-REPO\Project 1\MatlabFilterCalculation\Filter2 V2
// Name: FilterProgrammable
// CoefficientSource: ProcessorInterface
// InputDataType: numerictype(1,14,13)
// TargetLanguage: Verilog
// TestBenchName: FilterProgrammable_tb
// TestBenchUserStimulus:  User data, length 200
// TestBenchCoeffStimulus: [2.4549e-05  0.00010731  0.00031327  0.00072557   0.0014252   0.0024483    0.003727   0.0050255   0.0058957   0.0056784   0.0035754  -0.0011952   -0.009175   -0.020412    -0.03425   -0.049232   -0.063196   -0.073587   -0.077961   -0.074589   -0.063014   -0.044402   -0.021527   0.0016495    0.020781     0.03215    0.033644     0.02542    0.010021  -0.0081327    -0.02383   -0.032454   -0.031308   -0.020503  -0.0030738    0.015737    0.029925    0.034509    0.027166   0.0092201    -0.01437    -0.03609   -0.047795   -0.042981   -0.018779    0.022907    0.075496     0.12908     0.17275     0.19724     0.19724     0.17275     0.12908    0.075496    0.022907   -0.018779   -0.042981   -0.047795    -0.03609    -0.01437   0.0092201    0.027166    0.034509    0.029925    0.015737  -0.0030738   -0.020503   -0.031308   -0.032454    -0.02383  -0.0081327    0.010021     0.02542    0.033644     0.03215    0.020781   0.0016495   -0.021527   -0.044402   -0.063014   -0.074589   -0.077961   -0.073587   -0.063196   -0.049232    -0.03425   -0.020412   -0.009175  -0.0011952   0.0035754   0.0056784   0.0058957   0.0050255    0.003727   0.0024483   0.0014252  0.00072557  0.00031327  0.00010731  2.4549e-05]

// Filter Specifications:
//
// Sample Rate     : N/A (normalized frequency)
// Response        : Lowpass
// Specification   : N,Fp,Fst,Ap
// Stopband Edge   : 0.23
// Filter Order    : 99
// Passband Ripple : 80 dB
// Passband Edge   : 0.2
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Folding Factor        : 1
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form FIR
// Filter Length     : 100
// Stable            : Yes
// Linear Phase      : Yes (Type 2)
// Arithmetic        : fixed
// Numerator         : s14,13 -> [-1 1)
// -------------------------------------------------------------
// Multipliers           : 100



`timescale 1 ns / 1 ns

module FilterProgrammable
               (
                clk,
                clk_enable,
                reset,
                filter_in,
                write_enable,
                write_done,
                write_address,
                coeffs_in,
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input   signed [13:0] filter_in; //sfix14_En13
  input   write_enable; 
  input   write_done; 
  input   [6:0] write_address; //ufix7
  input   signed [13:0] coeffs_in; //sfix14_En13
  output  signed [34:0] filter_out; //sfix35_En26

////////////////////////////////////////////////////////////////
//Module Architecture: FilterProgrammable
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  // Signals
  reg  signed [13:0] delay_pipeline [0:99] ; // sfix14_En13
  reg  [6:0] write_address_reg; // ufix7
  reg  signed [13:0] coeffs_in_reg; // sfix14_En13
  reg  write_enable_reg; // boolean
  reg  write_done_reg; // boolean
  wire signed [13:0] coeffs_assigned [0:99] ; // sfix14_En13
  wire signed [13:0] coeffs_temp [0:99] ; // sfix14_En13
  reg  signed [13:0] coeffs_regs [0:99] ; // sfix14_En13
  reg  signed [13:0] coeffs_shadow [0:99] ; // sfix14_En13
  wire signed [27:0] product100; // sfix28_En26
  wire signed [27:0] product99; // sfix28_En26
  wire signed [27:0] product98; // sfix28_En26
  wire signed [27:0] product97; // sfix28_En26
  wire signed [27:0] product96; // sfix28_En26
  wire signed [27:0] product95; // sfix28_En26
  wire signed [27:0] product94; // sfix28_En26
  wire signed [27:0] product93; // sfix28_En26
  wire signed [27:0] product92; // sfix28_En26
  wire signed [27:0] product91; // sfix28_En26
  wire signed [27:0] product90; // sfix28_En26
  wire signed [27:0] product89; // sfix28_En26
  wire signed [27:0] product88; // sfix28_En26
  wire signed [27:0] product87; // sfix28_En26
  wire signed [27:0] product86; // sfix28_En26
  wire signed [27:0] product85; // sfix28_En26
  wire signed [27:0] product84; // sfix28_En26
  wire signed [27:0] product83; // sfix28_En26
  wire signed [27:0] product82; // sfix28_En26
  wire signed [27:0] product81; // sfix28_En26
  wire signed [27:0] product80; // sfix28_En26
  wire signed [27:0] product79; // sfix28_En26
  wire signed [27:0] product78; // sfix28_En26
  wire signed [27:0] product77; // sfix28_En26
  wire signed [27:0] product76; // sfix28_En26
  wire signed [27:0] product75; // sfix28_En26
  wire signed [27:0] product74; // sfix28_En26
  wire signed [27:0] product73; // sfix28_En26
  wire signed [27:0] product72; // sfix28_En26
  wire signed [27:0] product71; // sfix28_En26
  wire signed [27:0] product70; // sfix28_En26
  wire signed [27:0] product69; // sfix28_En26
  wire signed [27:0] product68; // sfix28_En26
  wire signed [27:0] product67; // sfix28_En26
  wire signed [27:0] product66; // sfix28_En26
  wire signed [27:0] product65; // sfix28_En26
  wire signed [27:0] product64; // sfix28_En26
  wire signed [27:0] product63; // sfix28_En26
  wire signed [27:0] product62; // sfix28_En26
  wire signed [27:0] product61; // sfix28_En26
  wire signed [27:0] product60; // sfix28_En26
  wire signed [27:0] product59; // sfix28_En26
  wire signed [27:0] product58; // sfix28_En26
  wire signed [27:0] product57; // sfix28_En26
  wire signed [27:0] product56; // sfix28_En26
  wire signed [27:0] product55; // sfix28_En26
  wire signed [27:0] product54; // sfix28_En26
  wire signed [27:0] product53; // sfix28_En26
  wire signed [27:0] product52; // sfix28_En26
  wire signed [27:0] product51; // sfix28_En26
  wire signed [27:0] product50; // sfix28_En26
  wire signed [27:0] product49; // sfix28_En26
  wire signed [27:0] product48; // sfix28_En26
  wire signed [27:0] product47; // sfix28_En26
  wire signed [27:0] product46; // sfix28_En26
  wire signed [27:0] product45; // sfix28_En26
  wire signed [27:0] product44; // sfix28_En26
  wire signed [27:0] product43; // sfix28_En26
  wire signed [27:0] product42; // sfix28_En26
  wire signed [27:0] product41; // sfix28_En26
  wire signed [27:0] product40; // sfix28_En26
  wire signed [27:0] product39; // sfix28_En26
  wire signed [27:0] product38; // sfix28_En26
  wire signed [27:0] product37; // sfix28_En26
  wire signed [27:0] product36; // sfix28_En26
  wire signed [27:0] product35; // sfix28_En26
  wire signed [27:0] product34; // sfix28_En26
  wire signed [27:0] product33; // sfix28_En26
  wire signed [27:0] product32; // sfix28_En26
  wire signed [27:0] product31; // sfix28_En26
  wire signed [27:0] product30; // sfix28_En26
  wire signed [27:0] product29; // sfix28_En26
  wire signed [27:0] product28; // sfix28_En26
  wire signed [27:0] product27; // sfix28_En26
  wire signed [27:0] product26; // sfix28_En26
  wire signed [27:0] product25; // sfix28_En26
  wire signed [27:0] product24; // sfix28_En26
  wire signed [27:0] product23; // sfix28_En26
  wire signed [27:0] product22; // sfix28_En26
  wire signed [27:0] product21; // sfix28_En26
  wire signed [27:0] product20; // sfix28_En26
  wire signed [27:0] product19; // sfix28_En26
  wire signed [27:0] product18; // sfix28_En26
  wire signed [27:0] product17; // sfix28_En26
  wire signed [27:0] product16; // sfix28_En26
  wire signed [27:0] product15; // sfix28_En26
  wire signed [27:0] product14; // sfix28_En26
  wire signed [27:0] product13; // sfix28_En26
  wire signed [27:0] product12; // sfix28_En26
  wire signed [27:0] product11; // sfix28_En26
  wire signed [27:0] product10; // sfix28_En26
  wire signed [27:0] product9; // sfix28_En26
  wire signed [27:0] product8; // sfix28_En26
  wire signed [27:0] product7; // sfix28_En26
  wire signed [27:0] product6; // sfix28_En26
  wire signed [27:0] product5; // sfix28_En26
  wire signed [27:0] product4; // sfix28_En26
  wire signed [27:0] product3; // sfix28_En26
  wire signed [27:0] product2; // sfix28_En26
  wire signed [34:0] product1_cast; // sfix35_En26
  wire signed [27:0] product1; // sfix28_En26
  wire signed [34:0] sum1; // sfix35_En26
  wire signed [34:0] add_signext; // sfix35_En26
  wire signed [34:0] add_signext_1; // sfix35_En26
  wire signed [35:0] add_temp; // sfix36_En26
  wire signed [34:0] sum2; // sfix35_En26
  wire signed [34:0] add_signext_2; // sfix35_En26
  wire signed [34:0] add_signext_3; // sfix35_En26
  wire signed [35:0] add_temp_1; // sfix36_En26
  wire signed [34:0] sum3; // sfix35_En26
  wire signed [34:0] add_signext_4; // sfix35_En26
  wire signed [34:0] add_signext_5; // sfix35_En26
  wire signed [35:0] add_temp_2; // sfix36_En26
  wire signed [34:0] sum4; // sfix35_En26
  wire signed [34:0] add_signext_6; // sfix35_En26
  wire signed [34:0] add_signext_7; // sfix35_En26
  wire signed [35:0] add_temp_3; // sfix36_En26
  wire signed [34:0] sum5; // sfix35_En26
  wire signed [34:0] add_signext_8; // sfix35_En26
  wire signed [34:0] add_signext_9; // sfix35_En26
  wire signed [35:0] add_temp_4; // sfix36_En26
  wire signed [34:0] sum6; // sfix35_En26
  wire signed [34:0] add_signext_10; // sfix35_En26
  wire signed [34:0] add_signext_11; // sfix35_En26
  wire signed [35:0] add_temp_5; // sfix36_En26
  wire signed [34:0] sum7; // sfix35_En26
  wire signed [34:0] add_signext_12; // sfix35_En26
  wire signed [34:0] add_signext_13; // sfix35_En26
  wire signed [35:0] add_temp_6; // sfix36_En26
  wire signed [34:0] sum8; // sfix35_En26
  wire signed [34:0] add_signext_14; // sfix35_En26
  wire signed [34:0] add_signext_15; // sfix35_En26
  wire signed [35:0] add_temp_7; // sfix36_En26
  wire signed [34:0] sum9; // sfix35_En26
  wire signed [34:0] add_signext_16; // sfix35_En26
  wire signed [34:0] add_signext_17; // sfix35_En26
  wire signed [35:0] add_temp_8; // sfix36_En26
  wire signed [34:0] sum10; // sfix35_En26
  wire signed [34:0] add_signext_18; // sfix35_En26
  wire signed [34:0] add_signext_19; // sfix35_En26
  wire signed [35:0] add_temp_9; // sfix36_En26
  wire signed [34:0] sum11; // sfix35_En26
  wire signed [34:0] add_signext_20; // sfix35_En26
  wire signed [34:0] add_signext_21; // sfix35_En26
  wire signed [35:0] add_temp_10; // sfix36_En26
  wire signed [34:0] sum12; // sfix35_En26
  wire signed [34:0] add_signext_22; // sfix35_En26
  wire signed [34:0] add_signext_23; // sfix35_En26
  wire signed [35:0] add_temp_11; // sfix36_En26
  wire signed [34:0] sum13; // sfix35_En26
  wire signed [34:0] add_signext_24; // sfix35_En26
  wire signed [34:0] add_signext_25; // sfix35_En26
  wire signed [35:0] add_temp_12; // sfix36_En26
  wire signed [34:0] sum14; // sfix35_En26
  wire signed [34:0] add_signext_26; // sfix35_En26
  wire signed [34:0] add_signext_27; // sfix35_En26
  wire signed [35:0] add_temp_13; // sfix36_En26
  wire signed [34:0] sum15; // sfix35_En26
  wire signed [34:0] add_signext_28; // sfix35_En26
  wire signed [34:0] add_signext_29; // sfix35_En26
  wire signed [35:0] add_temp_14; // sfix36_En26
  wire signed [34:0] sum16; // sfix35_En26
  wire signed [34:0] add_signext_30; // sfix35_En26
  wire signed [34:0] add_signext_31; // sfix35_En26
  wire signed [35:0] add_temp_15; // sfix36_En26
  wire signed [34:0] sum17; // sfix35_En26
  wire signed [34:0] add_signext_32; // sfix35_En26
  wire signed [34:0] add_signext_33; // sfix35_En26
  wire signed [35:0] add_temp_16; // sfix36_En26
  wire signed [34:0] sum18; // sfix35_En26
  wire signed [34:0] add_signext_34; // sfix35_En26
  wire signed [34:0] add_signext_35; // sfix35_En26
  wire signed [35:0] add_temp_17; // sfix36_En26
  wire signed [34:0] sum19; // sfix35_En26
  wire signed [34:0] add_signext_36; // sfix35_En26
  wire signed [34:0] add_signext_37; // sfix35_En26
  wire signed [35:0] add_temp_18; // sfix36_En26
  wire signed [34:0] sum20; // sfix35_En26
  wire signed [34:0] add_signext_38; // sfix35_En26
  wire signed [34:0] add_signext_39; // sfix35_En26
  wire signed [35:0] add_temp_19; // sfix36_En26
  wire signed [34:0] sum21; // sfix35_En26
  wire signed [34:0] add_signext_40; // sfix35_En26
  wire signed [34:0] add_signext_41; // sfix35_En26
  wire signed [35:0] add_temp_20; // sfix36_En26
  wire signed [34:0] sum22; // sfix35_En26
  wire signed [34:0] add_signext_42; // sfix35_En26
  wire signed [34:0] add_signext_43; // sfix35_En26
  wire signed [35:0] add_temp_21; // sfix36_En26
  wire signed [34:0] sum23; // sfix35_En26
  wire signed [34:0] add_signext_44; // sfix35_En26
  wire signed [34:0] add_signext_45; // sfix35_En26
  wire signed [35:0] add_temp_22; // sfix36_En26
  wire signed [34:0] sum24; // sfix35_En26
  wire signed [34:0] add_signext_46; // sfix35_En26
  wire signed [34:0] add_signext_47; // sfix35_En26
  wire signed [35:0] add_temp_23; // sfix36_En26
  wire signed [34:0] sum25; // sfix35_En26
  wire signed [34:0] add_signext_48; // sfix35_En26
  wire signed [34:0] add_signext_49; // sfix35_En26
  wire signed [35:0] add_temp_24; // sfix36_En26
  wire signed [34:0] sum26; // sfix35_En26
  wire signed [34:0] add_signext_50; // sfix35_En26
  wire signed [34:0] add_signext_51; // sfix35_En26
  wire signed [35:0] add_temp_25; // sfix36_En26
  wire signed [34:0] sum27; // sfix35_En26
  wire signed [34:0] add_signext_52; // sfix35_En26
  wire signed [34:0] add_signext_53; // sfix35_En26
  wire signed [35:0] add_temp_26; // sfix36_En26
  wire signed [34:0] sum28; // sfix35_En26
  wire signed [34:0] add_signext_54; // sfix35_En26
  wire signed [34:0] add_signext_55; // sfix35_En26
  wire signed [35:0] add_temp_27; // sfix36_En26
  wire signed [34:0] sum29; // sfix35_En26
  wire signed [34:0] add_signext_56; // sfix35_En26
  wire signed [34:0] add_signext_57; // sfix35_En26
  wire signed [35:0] add_temp_28; // sfix36_En26
  wire signed [34:0] sum30; // sfix35_En26
  wire signed [34:0] add_signext_58; // sfix35_En26
  wire signed [34:0] add_signext_59; // sfix35_En26
  wire signed [35:0] add_temp_29; // sfix36_En26
  wire signed [34:0] sum31; // sfix35_En26
  wire signed [34:0] add_signext_60; // sfix35_En26
  wire signed [34:0] add_signext_61; // sfix35_En26
  wire signed [35:0] add_temp_30; // sfix36_En26
  wire signed [34:0] sum32; // sfix35_En26
  wire signed [34:0] add_signext_62; // sfix35_En26
  wire signed [34:0] add_signext_63; // sfix35_En26
  wire signed [35:0] add_temp_31; // sfix36_En26
  wire signed [34:0] sum33; // sfix35_En26
  wire signed [34:0] add_signext_64; // sfix35_En26
  wire signed [34:0] add_signext_65; // sfix35_En26
  wire signed [35:0] add_temp_32; // sfix36_En26
  wire signed [34:0] sum34; // sfix35_En26
  wire signed [34:0] add_signext_66; // sfix35_En26
  wire signed [34:0] add_signext_67; // sfix35_En26
  wire signed [35:0] add_temp_33; // sfix36_En26
  wire signed [34:0] sum35; // sfix35_En26
  wire signed [34:0] add_signext_68; // sfix35_En26
  wire signed [34:0] add_signext_69; // sfix35_En26
  wire signed [35:0] add_temp_34; // sfix36_En26
  wire signed [34:0] sum36; // sfix35_En26
  wire signed [34:0] add_signext_70; // sfix35_En26
  wire signed [34:0] add_signext_71; // sfix35_En26
  wire signed [35:0] add_temp_35; // sfix36_En26
  wire signed [34:0] sum37; // sfix35_En26
  wire signed [34:0] add_signext_72; // sfix35_En26
  wire signed [34:0] add_signext_73; // sfix35_En26
  wire signed [35:0] add_temp_36; // sfix36_En26
  wire signed [34:0] sum38; // sfix35_En26
  wire signed [34:0] add_signext_74; // sfix35_En26
  wire signed [34:0] add_signext_75; // sfix35_En26
  wire signed [35:0] add_temp_37; // sfix36_En26
  wire signed [34:0] sum39; // sfix35_En26
  wire signed [34:0] add_signext_76; // sfix35_En26
  wire signed [34:0] add_signext_77; // sfix35_En26
  wire signed [35:0] add_temp_38; // sfix36_En26
  wire signed [34:0] sum40; // sfix35_En26
  wire signed [34:0] add_signext_78; // sfix35_En26
  wire signed [34:0] add_signext_79; // sfix35_En26
  wire signed [35:0] add_temp_39; // sfix36_En26
  wire signed [34:0] sum41; // sfix35_En26
  wire signed [34:0] add_signext_80; // sfix35_En26
  wire signed [34:0] add_signext_81; // sfix35_En26
  wire signed [35:0] add_temp_40; // sfix36_En26
  wire signed [34:0] sum42; // sfix35_En26
  wire signed [34:0] add_signext_82; // sfix35_En26
  wire signed [34:0] add_signext_83; // sfix35_En26
  wire signed [35:0] add_temp_41; // sfix36_En26
  wire signed [34:0] sum43; // sfix35_En26
  wire signed [34:0] add_signext_84; // sfix35_En26
  wire signed [34:0] add_signext_85; // sfix35_En26
  wire signed [35:0] add_temp_42; // sfix36_En26
  wire signed [34:0] sum44; // sfix35_En26
  wire signed [34:0] add_signext_86; // sfix35_En26
  wire signed [34:0] add_signext_87; // sfix35_En26
  wire signed [35:0] add_temp_43; // sfix36_En26
  wire signed [34:0] sum45; // sfix35_En26
  wire signed [34:0] add_signext_88; // sfix35_En26
  wire signed [34:0] add_signext_89; // sfix35_En26
  wire signed [35:0] add_temp_44; // sfix36_En26
  wire signed [34:0] sum46; // sfix35_En26
  wire signed [34:0] add_signext_90; // sfix35_En26
  wire signed [34:0] add_signext_91; // sfix35_En26
  wire signed [35:0] add_temp_45; // sfix36_En26
  wire signed [34:0] sum47; // sfix35_En26
  wire signed [34:0] add_signext_92; // sfix35_En26
  wire signed [34:0] add_signext_93; // sfix35_En26
  wire signed [35:0] add_temp_46; // sfix36_En26
  wire signed [34:0] sum48; // sfix35_En26
  wire signed [34:0] add_signext_94; // sfix35_En26
  wire signed [34:0] add_signext_95; // sfix35_En26
  wire signed [35:0] add_temp_47; // sfix36_En26
  wire signed [34:0] sum49; // sfix35_En26
  wire signed [34:0] add_signext_96; // sfix35_En26
  wire signed [34:0] add_signext_97; // sfix35_En26
  wire signed [35:0] add_temp_48; // sfix36_En26
  wire signed [34:0] sum50; // sfix35_En26
  wire signed [34:0] add_signext_98; // sfix35_En26
  wire signed [34:0] add_signext_99; // sfix35_En26
  wire signed [35:0] add_temp_49; // sfix36_En26
  wire signed [34:0] sum51; // sfix35_En26
  wire signed [34:0] add_signext_100; // sfix35_En26
  wire signed [34:0] add_signext_101; // sfix35_En26
  wire signed [35:0] add_temp_50; // sfix36_En26
  wire signed [34:0] sum52; // sfix35_En26
  wire signed [34:0] add_signext_102; // sfix35_En26
  wire signed [34:0] add_signext_103; // sfix35_En26
  wire signed [35:0] add_temp_51; // sfix36_En26
  wire signed [34:0] sum53; // sfix35_En26
  wire signed [34:0] add_signext_104; // sfix35_En26
  wire signed [34:0] add_signext_105; // sfix35_En26
  wire signed [35:0] add_temp_52; // sfix36_En26
  wire signed [34:0] sum54; // sfix35_En26
  wire signed [34:0] add_signext_106; // sfix35_En26
  wire signed [34:0] add_signext_107; // sfix35_En26
  wire signed [35:0] add_temp_53; // sfix36_En26
  wire signed [34:0] sum55; // sfix35_En26
  wire signed [34:0] add_signext_108; // sfix35_En26
  wire signed [34:0] add_signext_109; // sfix35_En26
  wire signed [35:0] add_temp_54; // sfix36_En26
  wire signed [34:0] sum56; // sfix35_En26
  wire signed [34:0] add_signext_110; // sfix35_En26
  wire signed [34:0] add_signext_111; // sfix35_En26
  wire signed [35:0] add_temp_55; // sfix36_En26
  wire signed [34:0] sum57; // sfix35_En26
  wire signed [34:0] add_signext_112; // sfix35_En26
  wire signed [34:0] add_signext_113; // sfix35_En26
  wire signed [35:0] add_temp_56; // sfix36_En26
  wire signed [34:0] sum58; // sfix35_En26
  wire signed [34:0] add_signext_114; // sfix35_En26
  wire signed [34:0] add_signext_115; // sfix35_En26
  wire signed [35:0] add_temp_57; // sfix36_En26
  wire signed [34:0] sum59; // sfix35_En26
  wire signed [34:0] add_signext_116; // sfix35_En26
  wire signed [34:0] add_signext_117; // sfix35_En26
  wire signed [35:0] add_temp_58; // sfix36_En26
  wire signed [34:0] sum60; // sfix35_En26
  wire signed [34:0] add_signext_118; // sfix35_En26
  wire signed [34:0] add_signext_119; // sfix35_En26
  wire signed [35:0] add_temp_59; // sfix36_En26
  wire signed [34:0] sum61; // sfix35_En26
  wire signed [34:0] add_signext_120; // sfix35_En26
  wire signed [34:0] add_signext_121; // sfix35_En26
  wire signed [35:0] add_temp_60; // sfix36_En26
  wire signed [34:0] sum62; // sfix35_En26
  wire signed [34:0] add_signext_122; // sfix35_En26
  wire signed [34:0] add_signext_123; // sfix35_En26
  wire signed [35:0] add_temp_61; // sfix36_En26
  wire signed [34:0] sum63; // sfix35_En26
  wire signed [34:0] add_signext_124; // sfix35_En26
  wire signed [34:0] add_signext_125; // sfix35_En26
  wire signed [35:0] add_temp_62; // sfix36_En26
  wire signed [34:0] sum64; // sfix35_En26
  wire signed [34:0] add_signext_126; // sfix35_En26
  wire signed [34:0] add_signext_127; // sfix35_En26
  wire signed [35:0] add_temp_63; // sfix36_En26
  wire signed [34:0] sum65; // sfix35_En26
  wire signed [34:0] add_signext_128; // sfix35_En26
  wire signed [34:0] add_signext_129; // sfix35_En26
  wire signed [35:0] add_temp_64; // sfix36_En26
  wire signed [34:0] sum66; // sfix35_En26
  wire signed [34:0] add_signext_130; // sfix35_En26
  wire signed [34:0] add_signext_131; // sfix35_En26
  wire signed [35:0] add_temp_65; // sfix36_En26
  wire signed [34:0] sum67; // sfix35_En26
  wire signed [34:0] add_signext_132; // sfix35_En26
  wire signed [34:0] add_signext_133; // sfix35_En26
  wire signed [35:0] add_temp_66; // sfix36_En26
  wire signed [34:0] sum68; // sfix35_En26
  wire signed [34:0] add_signext_134; // sfix35_En26
  wire signed [34:0] add_signext_135; // sfix35_En26
  wire signed [35:0] add_temp_67; // sfix36_En26
  wire signed [34:0] sum69; // sfix35_En26
  wire signed [34:0] add_signext_136; // sfix35_En26
  wire signed [34:0] add_signext_137; // sfix35_En26
  wire signed [35:0] add_temp_68; // sfix36_En26
  wire signed [34:0] sum70; // sfix35_En26
  wire signed [34:0] add_signext_138; // sfix35_En26
  wire signed [34:0] add_signext_139; // sfix35_En26
  wire signed [35:0] add_temp_69; // sfix36_En26
  wire signed [34:0] sum71; // sfix35_En26
  wire signed [34:0] add_signext_140; // sfix35_En26
  wire signed [34:0] add_signext_141; // sfix35_En26
  wire signed [35:0] add_temp_70; // sfix36_En26
  wire signed [34:0] sum72; // sfix35_En26
  wire signed [34:0] add_signext_142; // sfix35_En26
  wire signed [34:0] add_signext_143; // sfix35_En26
  wire signed [35:0] add_temp_71; // sfix36_En26
  wire signed [34:0] sum73; // sfix35_En26
  wire signed [34:0] add_signext_144; // sfix35_En26
  wire signed [34:0] add_signext_145; // sfix35_En26
  wire signed [35:0] add_temp_72; // sfix36_En26
  wire signed [34:0] sum74; // sfix35_En26
  wire signed [34:0] add_signext_146; // sfix35_En26
  wire signed [34:0] add_signext_147; // sfix35_En26
  wire signed [35:0] add_temp_73; // sfix36_En26
  wire signed [34:0] sum75; // sfix35_En26
  wire signed [34:0] add_signext_148; // sfix35_En26
  wire signed [34:0] add_signext_149; // sfix35_En26
  wire signed [35:0] add_temp_74; // sfix36_En26
  wire signed [34:0] sum76; // sfix35_En26
  wire signed [34:0] add_signext_150; // sfix35_En26
  wire signed [34:0] add_signext_151; // sfix35_En26
  wire signed [35:0] add_temp_75; // sfix36_En26
  wire signed [34:0] sum77; // sfix35_En26
  wire signed [34:0] add_signext_152; // sfix35_En26
  wire signed [34:0] add_signext_153; // sfix35_En26
  wire signed [35:0] add_temp_76; // sfix36_En26
  wire signed [34:0] sum78; // sfix35_En26
  wire signed [34:0] add_signext_154; // sfix35_En26
  wire signed [34:0] add_signext_155; // sfix35_En26
  wire signed [35:0] add_temp_77; // sfix36_En26
  wire signed [34:0] sum79; // sfix35_En26
  wire signed [34:0] add_signext_156; // sfix35_En26
  wire signed [34:0] add_signext_157; // sfix35_En26
  wire signed [35:0] add_temp_78; // sfix36_En26
  wire signed [34:0] sum80; // sfix35_En26
  wire signed [34:0] add_signext_158; // sfix35_En26
  wire signed [34:0] add_signext_159; // sfix35_En26
  wire signed [35:0] add_temp_79; // sfix36_En26
  wire signed [34:0] sum81; // sfix35_En26
  wire signed [34:0] add_signext_160; // sfix35_En26
  wire signed [34:0] add_signext_161; // sfix35_En26
  wire signed [35:0] add_temp_80; // sfix36_En26
  wire signed [34:0] sum82; // sfix35_En26
  wire signed [34:0] add_signext_162; // sfix35_En26
  wire signed [34:0] add_signext_163; // sfix35_En26
  wire signed [35:0] add_temp_81; // sfix36_En26
  wire signed [34:0] sum83; // sfix35_En26
  wire signed [34:0] add_signext_164; // sfix35_En26
  wire signed [34:0] add_signext_165; // sfix35_En26
  wire signed [35:0] add_temp_82; // sfix36_En26
  wire signed [34:0] sum84; // sfix35_En26
  wire signed [34:0] add_signext_166; // sfix35_En26
  wire signed [34:0] add_signext_167; // sfix35_En26
  wire signed [35:0] add_temp_83; // sfix36_En26
  wire signed [34:0] sum85; // sfix35_En26
  wire signed [34:0] add_signext_168; // sfix35_En26
  wire signed [34:0] add_signext_169; // sfix35_En26
  wire signed [35:0] add_temp_84; // sfix36_En26
  wire signed [34:0] sum86; // sfix35_En26
  wire signed [34:0] add_signext_170; // sfix35_En26
  wire signed [34:0] add_signext_171; // sfix35_En26
  wire signed [35:0] add_temp_85; // sfix36_En26
  wire signed [34:0] sum87; // sfix35_En26
  wire signed [34:0] add_signext_172; // sfix35_En26
  wire signed [34:0] add_signext_173; // sfix35_En26
  wire signed [35:0] add_temp_86; // sfix36_En26
  wire signed [34:0] sum88; // sfix35_En26
  wire signed [34:0] add_signext_174; // sfix35_En26
  wire signed [34:0] add_signext_175; // sfix35_En26
  wire signed [35:0] add_temp_87; // sfix36_En26
  wire signed [34:0] sum89; // sfix35_En26
  wire signed [34:0] add_signext_176; // sfix35_En26
  wire signed [34:0] add_signext_177; // sfix35_En26
  wire signed [35:0] add_temp_88; // sfix36_En26
  wire signed [34:0] sum90; // sfix35_En26
  wire signed [34:0] add_signext_178; // sfix35_En26
  wire signed [34:0] add_signext_179; // sfix35_En26
  wire signed [35:0] add_temp_89; // sfix36_En26
  wire signed [34:0] sum91; // sfix35_En26
  wire signed [34:0] add_signext_180; // sfix35_En26
  wire signed [34:0] add_signext_181; // sfix35_En26
  wire signed [35:0] add_temp_90; // sfix36_En26
  wire signed [34:0] sum92; // sfix35_En26
  wire signed [34:0] add_signext_182; // sfix35_En26
  wire signed [34:0] add_signext_183; // sfix35_En26
  wire signed [35:0] add_temp_91; // sfix36_En26
  wire signed [34:0] sum93; // sfix35_En26
  wire signed [34:0] add_signext_184; // sfix35_En26
  wire signed [34:0] add_signext_185; // sfix35_En26
  wire signed [35:0] add_temp_92; // sfix36_En26
  wire signed [34:0] sum94; // sfix35_En26
  wire signed [34:0] add_signext_186; // sfix35_En26
  wire signed [34:0] add_signext_187; // sfix35_En26
  wire signed [35:0] add_temp_93; // sfix36_En26
  wire signed [34:0] sum95; // sfix35_En26
  wire signed [34:0] add_signext_188; // sfix35_En26
  wire signed [34:0] add_signext_189; // sfix35_En26
  wire signed [35:0] add_temp_94; // sfix36_En26
  wire signed [34:0] sum96; // sfix35_En26
  wire signed [34:0] add_signext_190; // sfix35_En26
  wire signed [34:0] add_signext_191; // sfix35_En26
  wire signed [35:0] add_temp_95; // sfix36_En26
  wire signed [34:0] sum97; // sfix35_En26
  wire signed [34:0] add_signext_192; // sfix35_En26
  wire signed [34:0] add_signext_193; // sfix35_En26
  wire signed [35:0] add_temp_96; // sfix36_En26
  wire signed [34:0] sum98; // sfix35_En26
  wire signed [34:0] add_signext_194; // sfix35_En26
  wire signed [34:0] add_signext_195; // sfix35_En26
  wire signed [35:0] add_temp_97; // sfix36_En26
  wire signed [34:0] sum99; // sfix35_En26
  wire signed [34:0] add_signext_196; // sfix35_En26
  wire signed [34:0] add_signext_197; // sfix35_En26
  wire signed [35:0] add_temp_98; // sfix36_En26
  reg  signed [34:0] output_register; // sfix35_En26

  // Block Statements
  always @( posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
        delay_pipeline[61] <= 0;
        delay_pipeline[62] <= 0;
        delay_pipeline[63] <= 0;
        delay_pipeline[64] <= 0;
        delay_pipeline[65] <= 0;
        delay_pipeline[66] <= 0;
        delay_pipeline[67] <= 0;
        delay_pipeline[68] <= 0;
        delay_pipeline[69] <= 0;
        delay_pipeline[70] <= 0;
        delay_pipeline[71] <= 0;
        delay_pipeline[72] <= 0;
        delay_pipeline[73] <= 0;
        delay_pipeline[74] <= 0;
        delay_pipeline[75] <= 0;
        delay_pipeline[76] <= 0;
        delay_pipeline[77] <= 0;
        delay_pipeline[78] <= 0;
        delay_pipeline[79] <= 0;
        delay_pipeline[80] <= 0;
        delay_pipeline[81] <= 0;
        delay_pipeline[82] <= 0;
        delay_pipeline[83] <= 0;
        delay_pipeline[84] <= 0;
        delay_pipeline[85] <= 0;
        delay_pipeline[86] <= 0;
        delay_pipeline[87] <= 0;
        delay_pipeline[88] <= 0;
        delay_pipeline[89] <= 0;
        delay_pipeline[90] <= 0;
        delay_pipeline[91] <= 0;
        delay_pipeline[92] <= 0;
        delay_pipeline[93] <= 0;
        delay_pipeline[94] <= 0;
        delay_pipeline[95] <= 0;
        delay_pipeline[96] <= 0;
        delay_pipeline[97] <= 0;
        delay_pipeline[98] <= 0;
        delay_pipeline[99] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          delay_pipeline[0] <= filter_in;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
          delay_pipeline[41] <= delay_pipeline[40];
          delay_pipeline[42] <= delay_pipeline[41];
          delay_pipeline[43] <= delay_pipeline[42];
          delay_pipeline[44] <= delay_pipeline[43];
          delay_pipeline[45] <= delay_pipeline[44];
          delay_pipeline[46] <= delay_pipeline[45];
          delay_pipeline[47] <= delay_pipeline[46];
          delay_pipeline[48] <= delay_pipeline[47];
          delay_pipeline[49] <= delay_pipeline[48];
          delay_pipeline[50] <= delay_pipeline[49];
          delay_pipeline[51] <= delay_pipeline[50];
          delay_pipeline[52] <= delay_pipeline[51];
          delay_pipeline[53] <= delay_pipeline[52];
          delay_pipeline[54] <= delay_pipeline[53];
          delay_pipeline[55] <= delay_pipeline[54];
          delay_pipeline[56] <= delay_pipeline[55];
          delay_pipeline[57] <= delay_pipeline[56];
          delay_pipeline[58] <= delay_pipeline[57];
          delay_pipeline[59] <= delay_pipeline[58];
          delay_pipeline[60] <= delay_pipeline[59];
          delay_pipeline[61] <= delay_pipeline[60];
          delay_pipeline[62] <= delay_pipeline[61];
          delay_pipeline[63] <= delay_pipeline[62];
          delay_pipeline[64] <= delay_pipeline[63];
          delay_pipeline[65] <= delay_pipeline[64];
          delay_pipeline[66] <= delay_pipeline[65];
          delay_pipeline[67] <= delay_pipeline[66];
          delay_pipeline[68] <= delay_pipeline[67];
          delay_pipeline[69] <= delay_pipeline[68];
          delay_pipeline[70] <= delay_pipeline[69];
          delay_pipeline[71] <= delay_pipeline[70];
          delay_pipeline[72] <= delay_pipeline[71];
          delay_pipeline[73] <= delay_pipeline[72];
          delay_pipeline[74] <= delay_pipeline[73];
          delay_pipeline[75] <= delay_pipeline[74];
          delay_pipeline[76] <= delay_pipeline[75];
          delay_pipeline[77] <= delay_pipeline[76];
          delay_pipeline[78] <= delay_pipeline[77];
          delay_pipeline[79] <= delay_pipeline[78];
          delay_pipeline[80] <= delay_pipeline[79];
          delay_pipeline[81] <= delay_pipeline[80];
          delay_pipeline[82] <= delay_pipeline[81];
          delay_pipeline[83] <= delay_pipeline[82];
          delay_pipeline[84] <= delay_pipeline[83];
          delay_pipeline[85] <= delay_pipeline[84];
          delay_pipeline[86] <= delay_pipeline[85];
          delay_pipeline[87] <= delay_pipeline[86];
          delay_pipeline[88] <= delay_pipeline[87];
          delay_pipeline[89] <= delay_pipeline[88];
          delay_pipeline[90] <= delay_pipeline[89];
          delay_pipeline[91] <= delay_pipeline[90];
          delay_pipeline[92] <= delay_pipeline[91];
          delay_pipeline[93] <= delay_pipeline[92];
          delay_pipeline[94] <= delay_pipeline[93];
          delay_pipeline[95] <= delay_pipeline[94];
          delay_pipeline[96] <= delay_pipeline[95];
          delay_pipeline[97] <= delay_pipeline[96];
          delay_pipeline[98] <= delay_pipeline[97];
          delay_pipeline[99] <= delay_pipeline[98];
        end
      end
    end // Delay_Pipeline_process


  always @ (posedge clk or posedge reset)
    begin: Input_Register_process
      if (reset == 1'b1) begin
        write_enable_reg <= 1'b0;
        write_done_reg <= 1'b0;
        write_address_reg <= 0;
        coeffs_in_reg <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          write_enable_reg <= write_enable;
          write_done_reg <= write_done;
          write_address_reg <= write_address;
          coeffs_in_reg <= coeffs_in;
        end
      end
    end // Input_Register_process

  assign coeffs_assigned[0] = (write_address_reg == 7'b0000000) ? coeffs_in_reg :
                        coeffs_regs[0];
  assign coeffs_assigned[1] = (write_address_reg == 7'b0000001) ? coeffs_in_reg :
                        coeffs_regs[1];
  assign coeffs_assigned[2] = (write_address_reg == 7'b0000010) ? coeffs_in_reg :
                        coeffs_regs[2];
  assign coeffs_assigned[3] = (write_address_reg == 7'b0000011) ? coeffs_in_reg :
                        coeffs_regs[3];
  assign coeffs_assigned[4] = (write_address_reg == 7'b0000100) ? coeffs_in_reg :
                        coeffs_regs[4];
  assign coeffs_assigned[5] = (write_address_reg == 7'b0000101) ? coeffs_in_reg :
                        coeffs_regs[5];
  assign coeffs_assigned[6] = (write_address_reg == 7'b0000110) ? coeffs_in_reg :
                        coeffs_regs[6];
  assign coeffs_assigned[7] = (write_address_reg == 7'b0000111) ? coeffs_in_reg :
                        coeffs_regs[7];
  assign coeffs_assigned[8] = (write_address_reg == 7'b0001000) ? coeffs_in_reg :
                        coeffs_regs[8];
  assign coeffs_assigned[9] = (write_address_reg == 7'b0001001) ? coeffs_in_reg :
                        coeffs_regs[9];
  assign coeffs_assigned[10] = (write_address_reg == 7'b0001010) ? coeffs_in_reg :
                         coeffs_regs[10];
  assign coeffs_assigned[11] = (write_address_reg == 7'b0001011) ? coeffs_in_reg :
                         coeffs_regs[11];
  assign coeffs_assigned[12] = (write_address_reg == 7'b0001100) ? coeffs_in_reg :
                         coeffs_regs[12];
  assign coeffs_assigned[13] = (write_address_reg == 7'b0001101) ? coeffs_in_reg :
                         coeffs_regs[13];
  assign coeffs_assigned[14] = (write_address_reg == 7'b0001110) ? coeffs_in_reg :
                         coeffs_regs[14];
  assign coeffs_assigned[15] = (write_address_reg == 7'b0001111) ? coeffs_in_reg :
                         coeffs_regs[15];
  assign coeffs_assigned[16] = (write_address_reg == 7'b0010000) ? coeffs_in_reg :
                         coeffs_regs[16];
  assign coeffs_assigned[17] = (write_address_reg == 7'b0010001) ? coeffs_in_reg :
                         coeffs_regs[17];
  assign coeffs_assigned[18] = (write_address_reg == 7'b0010010) ? coeffs_in_reg :
                         coeffs_regs[18];
  assign coeffs_assigned[19] = (write_address_reg == 7'b0010011) ? coeffs_in_reg :
                         coeffs_regs[19];
  assign coeffs_assigned[20] = (write_address_reg == 7'b0010100) ? coeffs_in_reg :
                         coeffs_regs[20];
  assign coeffs_assigned[21] = (write_address_reg == 7'b0010101) ? coeffs_in_reg :
                         coeffs_regs[21];
  assign coeffs_assigned[22] = (write_address_reg == 7'b0010110) ? coeffs_in_reg :
                         coeffs_regs[22];
  assign coeffs_assigned[23] = (write_address_reg == 7'b0010111) ? coeffs_in_reg :
                         coeffs_regs[23];
  assign coeffs_assigned[24] = (write_address_reg == 7'b0011000) ? coeffs_in_reg :
                         coeffs_regs[24];
  assign coeffs_assigned[25] = (write_address_reg == 7'b0011001) ? coeffs_in_reg :
                         coeffs_regs[25];
  assign coeffs_assigned[26] = (write_address_reg == 7'b0011010) ? coeffs_in_reg :
                         coeffs_regs[26];
  assign coeffs_assigned[27] = (write_address_reg == 7'b0011011) ? coeffs_in_reg :
                         coeffs_regs[27];
  assign coeffs_assigned[28] = (write_address_reg == 7'b0011100) ? coeffs_in_reg :
                         coeffs_regs[28];
  assign coeffs_assigned[29] = (write_address_reg == 7'b0011101) ? coeffs_in_reg :
                         coeffs_regs[29];
  assign coeffs_assigned[30] = (write_address_reg == 7'b0011110) ? coeffs_in_reg :
                         coeffs_regs[30];
  assign coeffs_assigned[31] = (write_address_reg == 7'b0011111) ? coeffs_in_reg :
                         coeffs_regs[31];
  assign coeffs_assigned[32] = (write_address_reg == 7'b0100000) ? coeffs_in_reg :
                         coeffs_regs[32];
  assign coeffs_assigned[33] = (write_address_reg == 7'b0100001) ? coeffs_in_reg :
                         coeffs_regs[33];
  assign coeffs_assigned[34] = (write_address_reg == 7'b0100010) ? coeffs_in_reg :
                         coeffs_regs[34];
  assign coeffs_assigned[35] = (write_address_reg == 7'b0100011) ? coeffs_in_reg :
                         coeffs_regs[35];
  assign coeffs_assigned[36] = (write_address_reg == 7'b0100100) ? coeffs_in_reg :
                         coeffs_regs[36];
  assign coeffs_assigned[37] = (write_address_reg == 7'b0100101) ? coeffs_in_reg :
                         coeffs_regs[37];
  assign coeffs_assigned[38] = (write_address_reg == 7'b0100110) ? coeffs_in_reg :
                         coeffs_regs[38];
  assign coeffs_assigned[39] = (write_address_reg == 7'b0100111) ? coeffs_in_reg :
                         coeffs_regs[39];
  assign coeffs_assigned[40] = (write_address_reg == 7'b0101000) ? coeffs_in_reg :
                         coeffs_regs[40];
  assign coeffs_assigned[41] = (write_address_reg == 7'b0101001) ? coeffs_in_reg :
                         coeffs_regs[41];
  assign coeffs_assigned[42] = (write_address_reg == 7'b0101010) ? coeffs_in_reg :
                         coeffs_regs[42];
  assign coeffs_assigned[43] = (write_address_reg == 7'b0101011) ? coeffs_in_reg :
                         coeffs_regs[43];
  assign coeffs_assigned[44] = (write_address_reg == 7'b0101100) ? coeffs_in_reg :
                         coeffs_regs[44];
  assign coeffs_assigned[45] = (write_address_reg == 7'b0101101) ? coeffs_in_reg :
                         coeffs_regs[45];
  assign coeffs_assigned[46] = (write_address_reg == 7'b0101110) ? coeffs_in_reg :
                         coeffs_regs[46];
  assign coeffs_assigned[47] = (write_address_reg == 7'b0101111) ? coeffs_in_reg :
                         coeffs_regs[47];
  assign coeffs_assigned[48] = (write_address_reg == 7'b0110000) ? coeffs_in_reg :
                         coeffs_regs[48];
  assign coeffs_assigned[49] = (write_address_reg == 7'b0110001) ? coeffs_in_reg :
                         coeffs_regs[49];
  assign coeffs_assigned[50] = (write_address_reg == 7'b0110010) ? coeffs_in_reg :
                         coeffs_regs[50];
  assign coeffs_assigned[51] = (write_address_reg == 7'b0110011) ? coeffs_in_reg :
                         coeffs_regs[51];
  assign coeffs_assigned[52] = (write_address_reg == 7'b0110100) ? coeffs_in_reg :
                         coeffs_regs[52];
  assign coeffs_assigned[53] = (write_address_reg == 7'b0110101) ? coeffs_in_reg :
                         coeffs_regs[53];
  assign coeffs_assigned[54] = (write_address_reg == 7'b0110110) ? coeffs_in_reg :
                         coeffs_regs[54];
  assign coeffs_assigned[55] = (write_address_reg == 7'b0110111) ? coeffs_in_reg :
                         coeffs_regs[55];
  assign coeffs_assigned[56] = (write_address_reg == 7'b0111000) ? coeffs_in_reg :
                         coeffs_regs[56];
  assign coeffs_assigned[57] = (write_address_reg == 7'b0111001) ? coeffs_in_reg :
                         coeffs_regs[57];
  assign coeffs_assigned[58] = (write_address_reg == 7'b0111010) ? coeffs_in_reg :
                         coeffs_regs[58];
  assign coeffs_assigned[59] = (write_address_reg == 7'b0111011) ? coeffs_in_reg :
                         coeffs_regs[59];
  assign coeffs_assigned[60] = (write_address_reg == 7'b0111100) ? coeffs_in_reg :
                         coeffs_regs[60];
  assign coeffs_assigned[61] = (write_address_reg == 7'b0111101) ? coeffs_in_reg :
                         coeffs_regs[61];
  assign coeffs_assigned[62] = (write_address_reg == 7'b0111110) ? coeffs_in_reg :
                         coeffs_regs[62];
  assign coeffs_assigned[63] = (write_address_reg == 7'b0111111) ? coeffs_in_reg :
                         coeffs_regs[63];
  assign coeffs_assigned[64] = (write_address_reg == 7'b1000000) ? coeffs_in_reg :
                         coeffs_regs[64];
  assign coeffs_assigned[65] = (write_address_reg == 7'b1000001) ? coeffs_in_reg :
                         coeffs_regs[65];
  assign coeffs_assigned[66] = (write_address_reg == 7'b1000010) ? coeffs_in_reg :
                         coeffs_regs[66];
  assign coeffs_assigned[67] = (write_address_reg == 7'b1000011) ? coeffs_in_reg :
                         coeffs_regs[67];
  assign coeffs_assigned[68] = (write_address_reg == 7'b1000100) ? coeffs_in_reg :
                         coeffs_regs[68];
  assign coeffs_assigned[69] = (write_address_reg == 7'b1000101) ? coeffs_in_reg :
                         coeffs_regs[69];
  assign coeffs_assigned[70] = (write_address_reg == 7'b1000110) ? coeffs_in_reg :
                         coeffs_regs[70];
  assign coeffs_assigned[71] = (write_address_reg == 7'b1000111) ? coeffs_in_reg :
                         coeffs_regs[71];
  assign coeffs_assigned[72] = (write_address_reg == 7'b1001000) ? coeffs_in_reg :
                         coeffs_regs[72];
  assign coeffs_assigned[73] = (write_address_reg == 7'b1001001) ? coeffs_in_reg :
                         coeffs_regs[73];
  assign coeffs_assigned[74] = (write_address_reg == 7'b1001010) ? coeffs_in_reg :
                         coeffs_regs[74];
  assign coeffs_assigned[75] = (write_address_reg == 7'b1001011) ? coeffs_in_reg :
                         coeffs_regs[75];
  assign coeffs_assigned[76] = (write_address_reg == 7'b1001100) ? coeffs_in_reg :
                         coeffs_regs[76];
  assign coeffs_assigned[77] = (write_address_reg == 7'b1001101) ? coeffs_in_reg :
                         coeffs_regs[77];
  assign coeffs_assigned[78] = (write_address_reg == 7'b1001110) ? coeffs_in_reg :
                         coeffs_regs[78];
  assign coeffs_assigned[79] = (write_address_reg == 7'b1001111) ? coeffs_in_reg :
                         coeffs_regs[79];
  assign coeffs_assigned[80] = (write_address_reg == 7'b1010000) ? coeffs_in_reg :
                         coeffs_regs[80];
  assign coeffs_assigned[81] = (write_address_reg == 7'b1010001) ? coeffs_in_reg :
                         coeffs_regs[81];
  assign coeffs_assigned[82] = (write_address_reg == 7'b1010010) ? coeffs_in_reg :
                         coeffs_regs[82];
  assign coeffs_assigned[83] = (write_address_reg == 7'b1010011) ? coeffs_in_reg :
                         coeffs_regs[83];
  assign coeffs_assigned[84] = (write_address_reg == 7'b1010100) ? coeffs_in_reg :
                         coeffs_regs[84];
  assign coeffs_assigned[85] = (write_address_reg == 7'b1010101) ? coeffs_in_reg :
                         coeffs_regs[85];
  assign coeffs_assigned[86] = (write_address_reg == 7'b1010110) ? coeffs_in_reg :
                         coeffs_regs[86];
  assign coeffs_assigned[87] = (write_address_reg == 7'b1010111) ? coeffs_in_reg :
                         coeffs_regs[87];
  assign coeffs_assigned[88] = (write_address_reg == 7'b1011000) ? coeffs_in_reg :
                         coeffs_regs[88];
  assign coeffs_assigned[89] = (write_address_reg == 7'b1011001) ? coeffs_in_reg :
                         coeffs_regs[89];
  assign coeffs_assigned[90] = (write_address_reg == 7'b1011010) ? coeffs_in_reg :
                         coeffs_regs[90];
  assign coeffs_assigned[91] = (write_address_reg == 7'b1011011) ? coeffs_in_reg :
                         coeffs_regs[91];
  assign coeffs_assigned[92] = (write_address_reg == 7'b1011100) ? coeffs_in_reg :
                         coeffs_regs[92];
  assign coeffs_assigned[93] = (write_address_reg == 7'b1011101) ? coeffs_in_reg :
                         coeffs_regs[93];
  assign coeffs_assigned[94] = (write_address_reg == 7'b1011110) ? coeffs_in_reg :
                         coeffs_regs[94];
  assign coeffs_assigned[95] = (write_address_reg == 7'b1011111) ? coeffs_in_reg :
                         coeffs_regs[95];
  assign coeffs_assigned[96] = (write_address_reg == 7'b1100000) ? coeffs_in_reg :
                         coeffs_regs[96];
  assign coeffs_assigned[97] = (write_address_reg == 7'b1100001) ? coeffs_in_reg :
                         coeffs_regs[97];
  assign coeffs_assigned[98] = (write_address_reg == 7'b1100010) ? coeffs_in_reg :
                         coeffs_regs[98];
  assign coeffs_assigned[99] = (write_address_reg == 7'b1100011) ? coeffs_in_reg :
                         coeffs_regs[99];
  assign coeffs_temp[0] = (write_enable_reg == 1'b1) ? coeffs_assigned[0] :
                    coeffs_regs[0];
  assign coeffs_temp[1] = (write_enable_reg == 1'b1) ? coeffs_assigned[1] :
                    coeffs_regs[1];
  assign coeffs_temp[2] = (write_enable_reg == 1'b1) ? coeffs_assigned[2] :
                    coeffs_regs[2];
  assign coeffs_temp[3] = (write_enable_reg == 1'b1) ? coeffs_assigned[3] :
                    coeffs_regs[3];
  assign coeffs_temp[4] = (write_enable_reg == 1'b1) ? coeffs_assigned[4] :
                    coeffs_regs[4];
  assign coeffs_temp[5] = (write_enable_reg == 1'b1) ? coeffs_assigned[5] :
                    coeffs_regs[5];
  assign coeffs_temp[6] = (write_enable_reg == 1'b1) ? coeffs_assigned[6] :
                    coeffs_regs[6];
  assign coeffs_temp[7] = (write_enable_reg == 1'b1) ? coeffs_assigned[7] :
                    coeffs_regs[7];
  assign coeffs_temp[8] = (write_enable_reg == 1'b1) ? coeffs_assigned[8] :
                    coeffs_regs[8];
  assign coeffs_temp[9] = (write_enable_reg == 1'b1) ? coeffs_assigned[9] :
                    coeffs_regs[9];
  assign coeffs_temp[10] = (write_enable_reg == 1'b1) ? coeffs_assigned[10] :
                     coeffs_regs[10];
  assign coeffs_temp[11] = (write_enable_reg == 1'b1) ? coeffs_assigned[11] :
                     coeffs_regs[11];
  assign coeffs_temp[12] = (write_enable_reg == 1'b1) ? coeffs_assigned[12] :
                     coeffs_regs[12];
  assign coeffs_temp[13] = (write_enable_reg == 1'b1) ? coeffs_assigned[13] :
                     coeffs_regs[13];
  assign coeffs_temp[14] = (write_enable_reg == 1'b1) ? coeffs_assigned[14] :
                     coeffs_regs[14];
  assign coeffs_temp[15] = (write_enable_reg == 1'b1) ? coeffs_assigned[15] :
                     coeffs_regs[15];
  assign coeffs_temp[16] = (write_enable_reg == 1'b1) ? coeffs_assigned[16] :
                     coeffs_regs[16];
  assign coeffs_temp[17] = (write_enable_reg == 1'b1) ? coeffs_assigned[17] :
                     coeffs_regs[17];
  assign coeffs_temp[18] = (write_enable_reg == 1'b1) ? coeffs_assigned[18] :
                     coeffs_regs[18];
  assign coeffs_temp[19] = (write_enable_reg == 1'b1) ? coeffs_assigned[19] :
                     coeffs_regs[19];
  assign coeffs_temp[20] = (write_enable_reg == 1'b1) ? coeffs_assigned[20] :
                     coeffs_regs[20];
  assign coeffs_temp[21] = (write_enable_reg == 1'b1) ? coeffs_assigned[21] :
                     coeffs_regs[21];
  assign coeffs_temp[22] = (write_enable_reg == 1'b1) ? coeffs_assigned[22] :
                     coeffs_regs[22];
  assign coeffs_temp[23] = (write_enable_reg == 1'b1) ? coeffs_assigned[23] :
                     coeffs_regs[23];
  assign coeffs_temp[24] = (write_enable_reg == 1'b1) ? coeffs_assigned[24] :
                     coeffs_regs[24];
  assign coeffs_temp[25] = (write_enable_reg == 1'b1) ? coeffs_assigned[25] :
                     coeffs_regs[25];
  assign coeffs_temp[26] = (write_enable_reg == 1'b1) ? coeffs_assigned[26] :
                     coeffs_regs[26];
  assign coeffs_temp[27] = (write_enable_reg == 1'b1) ? coeffs_assigned[27] :
                     coeffs_regs[27];
  assign coeffs_temp[28] = (write_enable_reg == 1'b1) ? coeffs_assigned[28] :
                     coeffs_regs[28];
  assign coeffs_temp[29] = (write_enable_reg == 1'b1) ? coeffs_assigned[29] :
                     coeffs_regs[29];
  assign coeffs_temp[30] = (write_enable_reg == 1'b1) ? coeffs_assigned[30] :
                     coeffs_regs[30];
  assign coeffs_temp[31] = (write_enable_reg == 1'b1) ? coeffs_assigned[31] :
                     coeffs_regs[31];
  assign coeffs_temp[32] = (write_enable_reg == 1'b1) ? coeffs_assigned[32] :
                     coeffs_regs[32];
  assign coeffs_temp[33] = (write_enable_reg == 1'b1) ? coeffs_assigned[33] :
                     coeffs_regs[33];
  assign coeffs_temp[34] = (write_enable_reg == 1'b1) ? coeffs_assigned[34] :
                     coeffs_regs[34];
  assign coeffs_temp[35] = (write_enable_reg == 1'b1) ? coeffs_assigned[35] :
                     coeffs_regs[35];
  assign coeffs_temp[36] = (write_enable_reg == 1'b1) ? coeffs_assigned[36] :
                     coeffs_regs[36];
  assign coeffs_temp[37] = (write_enable_reg == 1'b1) ? coeffs_assigned[37] :
                     coeffs_regs[37];
  assign coeffs_temp[38] = (write_enable_reg == 1'b1) ? coeffs_assigned[38] :
                     coeffs_regs[38];
  assign coeffs_temp[39] = (write_enable_reg == 1'b1) ? coeffs_assigned[39] :
                     coeffs_regs[39];
  assign coeffs_temp[40] = (write_enable_reg == 1'b1) ? coeffs_assigned[40] :
                     coeffs_regs[40];
  assign coeffs_temp[41] = (write_enable_reg == 1'b1) ? coeffs_assigned[41] :
                     coeffs_regs[41];
  assign coeffs_temp[42] = (write_enable_reg == 1'b1) ? coeffs_assigned[42] :
                     coeffs_regs[42];
  assign coeffs_temp[43] = (write_enable_reg == 1'b1) ? coeffs_assigned[43] :
                     coeffs_regs[43];
  assign coeffs_temp[44] = (write_enable_reg == 1'b1) ? coeffs_assigned[44] :
                     coeffs_regs[44];
  assign coeffs_temp[45] = (write_enable_reg == 1'b1) ? coeffs_assigned[45] :
                     coeffs_regs[45];
  assign coeffs_temp[46] = (write_enable_reg == 1'b1) ? coeffs_assigned[46] :
                     coeffs_regs[46];
  assign coeffs_temp[47] = (write_enable_reg == 1'b1) ? coeffs_assigned[47] :
                     coeffs_regs[47];
  assign coeffs_temp[48] = (write_enable_reg == 1'b1) ? coeffs_assigned[48] :
                     coeffs_regs[48];
  assign coeffs_temp[49] = (write_enable_reg == 1'b1) ? coeffs_assigned[49] :
                     coeffs_regs[49];
  assign coeffs_temp[50] = (write_enable_reg == 1'b1) ? coeffs_assigned[50] :
                     coeffs_regs[50];
  assign coeffs_temp[51] = (write_enable_reg == 1'b1) ? coeffs_assigned[51] :
                     coeffs_regs[51];
  assign coeffs_temp[52] = (write_enable_reg == 1'b1) ? coeffs_assigned[52] :
                     coeffs_regs[52];
  assign coeffs_temp[53] = (write_enable_reg == 1'b1) ? coeffs_assigned[53] :
                     coeffs_regs[53];
  assign coeffs_temp[54] = (write_enable_reg == 1'b1) ? coeffs_assigned[54] :
                     coeffs_regs[54];
  assign coeffs_temp[55] = (write_enable_reg == 1'b1) ? coeffs_assigned[55] :
                     coeffs_regs[55];
  assign coeffs_temp[56] = (write_enable_reg == 1'b1) ? coeffs_assigned[56] :
                     coeffs_regs[56];
  assign coeffs_temp[57] = (write_enable_reg == 1'b1) ? coeffs_assigned[57] :
                     coeffs_regs[57];
  assign coeffs_temp[58] = (write_enable_reg == 1'b1) ? coeffs_assigned[58] :
                     coeffs_regs[58];
  assign coeffs_temp[59] = (write_enable_reg == 1'b1) ? coeffs_assigned[59] :
                     coeffs_regs[59];
  assign coeffs_temp[60] = (write_enable_reg == 1'b1) ? coeffs_assigned[60] :
                     coeffs_regs[60];
  assign coeffs_temp[61] = (write_enable_reg == 1'b1) ? coeffs_assigned[61] :
                     coeffs_regs[61];
  assign coeffs_temp[62] = (write_enable_reg == 1'b1) ? coeffs_assigned[62] :
                     coeffs_regs[62];
  assign coeffs_temp[63] = (write_enable_reg == 1'b1) ? coeffs_assigned[63] :
                     coeffs_regs[63];
  assign coeffs_temp[64] = (write_enable_reg == 1'b1) ? coeffs_assigned[64] :
                     coeffs_regs[64];
  assign coeffs_temp[65] = (write_enable_reg == 1'b1) ? coeffs_assigned[65] :
                     coeffs_regs[65];
  assign coeffs_temp[66] = (write_enable_reg == 1'b1) ? coeffs_assigned[66] :
                     coeffs_regs[66];
  assign coeffs_temp[67] = (write_enable_reg == 1'b1) ? coeffs_assigned[67] :
                     coeffs_regs[67];
  assign coeffs_temp[68] = (write_enable_reg == 1'b1) ? coeffs_assigned[68] :
                     coeffs_regs[68];
  assign coeffs_temp[69] = (write_enable_reg == 1'b1) ? coeffs_assigned[69] :
                     coeffs_regs[69];
  assign coeffs_temp[70] = (write_enable_reg == 1'b1) ? coeffs_assigned[70] :
                     coeffs_regs[70];
  assign coeffs_temp[71] = (write_enable_reg == 1'b1) ? coeffs_assigned[71] :
                     coeffs_regs[71];
  assign coeffs_temp[72] = (write_enable_reg == 1'b1) ? coeffs_assigned[72] :
                     coeffs_regs[72];
  assign coeffs_temp[73] = (write_enable_reg == 1'b1) ? coeffs_assigned[73] :
                     coeffs_regs[73];
  assign coeffs_temp[74] = (write_enable_reg == 1'b1) ? coeffs_assigned[74] :
                     coeffs_regs[74];
  assign coeffs_temp[75] = (write_enable_reg == 1'b1) ? coeffs_assigned[75] :
                     coeffs_regs[75];
  assign coeffs_temp[76] = (write_enable_reg == 1'b1) ? coeffs_assigned[76] :
                     coeffs_regs[76];
  assign coeffs_temp[77] = (write_enable_reg == 1'b1) ? coeffs_assigned[77] :
                     coeffs_regs[77];
  assign coeffs_temp[78] = (write_enable_reg == 1'b1) ? coeffs_assigned[78] :
                     coeffs_regs[78];
  assign coeffs_temp[79] = (write_enable_reg == 1'b1) ? coeffs_assigned[79] :
                     coeffs_regs[79];
  assign coeffs_temp[80] = (write_enable_reg == 1'b1) ? coeffs_assigned[80] :
                     coeffs_regs[80];
  assign coeffs_temp[81] = (write_enable_reg == 1'b1) ? coeffs_assigned[81] :
                     coeffs_regs[81];
  assign coeffs_temp[82] = (write_enable_reg == 1'b1) ? coeffs_assigned[82] :
                     coeffs_regs[82];
  assign coeffs_temp[83] = (write_enable_reg == 1'b1) ? coeffs_assigned[83] :
                     coeffs_regs[83];
  assign coeffs_temp[84] = (write_enable_reg == 1'b1) ? coeffs_assigned[84] :
                     coeffs_regs[84];
  assign coeffs_temp[85] = (write_enable_reg == 1'b1) ? coeffs_assigned[85] :
                     coeffs_regs[85];
  assign coeffs_temp[86] = (write_enable_reg == 1'b1) ? coeffs_assigned[86] :
                     coeffs_regs[86];
  assign coeffs_temp[87] = (write_enable_reg == 1'b1) ? coeffs_assigned[87] :
                     coeffs_regs[87];
  assign coeffs_temp[88] = (write_enable_reg == 1'b1) ? coeffs_assigned[88] :
                     coeffs_regs[88];
  assign coeffs_temp[89] = (write_enable_reg == 1'b1) ? coeffs_assigned[89] :
                     coeffs_regs[89];
  assign coeffs_temp[90] = (write_enable_reg == 1'b1) ? coeffs_assigned[90] :
                     coeffs_regs[90];
  assign coeffs_temp[91] = (write_enable_reg == 1'b1) ? coeffs_assigned[91] :
                     coeffs_regs[91];
  assign coeffs_temp[92] = (write_enable_reg == 1'b1) ? coeffs_assigned[92] :
                     coeffs_regs[92];
  assign coeffs_temp[93] = (write_enable_reg == 1'b1) ? coeffs_assigned[93] :
                     coeffs_regs[93];
  assign coeffs_temp[94] = (write_enable_reg == 1'b1) ? coeffs_assigned[94] :
                     coeffs_regs[94];
  assign coeffs_temp[95] = (write_enable_reg == 1'b1) ? coeffs_assigned[95] :
                     coeffs_regs[95];
  assign coeffs_temp[96] = (write_enable_reg == 1'b1) ? coeffs_assigned[96] :
                     coeffs_regs[96];
  assign coeffs_temp[97] = (write_enable_reg == 1'b1) ? coeffs_assigned[97] :
                     coeffs_regs[97];
  assign coeffs_temp[98] = (write_enable_reg == 1'b1) ? coeffs_assigned[98] :
                     coeffs_regs[98];
  assign coeffs_temp[99] = (write_enable_reg == 1'b1) ? coeffs_assigned[99] :
                     coeffs_regs[99];
  always @ (posedge clk or posedge reset)
    begin: Coeffs_Registers_process
      if (reset == 1'b1) begin
        coeffs_regs[0] <= 0;
        coeffs_regs[1] <= 0;
        coeffs_regs[2] <= 0;
        coeffs_regs[3] <= 0;
        coeffs_regs[4] <= 0;
        coeffs_regs[5] <= 0;
        coeffs_regs[6] <= 0;
        coeffs_regs[7] <= 0;
        coeffs_regs[8] <= 0;
        coeffs_regs[9] <= 0;
        coeffs_regs[10] <= 0;
        coeffs_regs[11] <= 0;
        coeffs_regs[12] <= 0;
        coeffs_regs[13] <= 0;
        coeffs_regs[14] <= 0;
        coeffs_regs[15] <= 0;
        coeffs_regs[16] <= 0;
        coeffs_regs[17] <= 0;
        coeffs_regs[18] <= 0;
        coeffs_regs[19] <= 0;
        coeffs_regs[20] <= 0;
        coeffs_regs[21] <= 0;
        coeffs_regs[22] <= 0;
        coeffs_regs[23] <= 0;
        coeffs_regs[24] <= 0;
        coeffs_regs[25] <= 0;
        coeffs_regs[26] <= 0;
        coeffs_regs[27] <= 0;
        coeffs_regs[28] <= 0;
        coeffs_regs[29] <= 0;
        coeffs_regs[30] <= 0;
        coeffs_regs[31] <= 0;
        coeffs_regs[32] <= 0;
        coeffs_regs[33] <= 0;
        coeffs_regs[34] <= 0;
        coeffs_regs[35] <= 0;
        coeffs_regs[36] <= 0;
        coeffs_regs[37] <= 0;
        coeffs_regs[38] <= 0;
        coeffs_regs[39] <= 0;
        coeffs_regs[40] <= 0;
        coeffs_regs[41] <= 0;
        coeffs_regs[42] <= 0;
        coeffs_regs[43] <= 0;
        coeffs_regs[44] <= 0;
        coeffs_regs[45] <= 0;
        coeffs_regs[46] <= 0;
        coeffs_regs[47] <= 0;
        coeffs_regs[48] <= 0;
        coeffs_regs[49] <= 0;
        coeffs_regs[50] <= 0;
        coeffs_regs[51] <= 0;
        coeffs_regs[52] <= 0;
        coeffs_regs[53] <= 0;
        coeffs_regs[54] <= 0;
        coeffs_regs[55] <= 0;
        coeffs_regs[56] <= 0;
        coeffs_regs[57] <= 0;
        coeffs_regs[58] <= 0;
        coeffs_regs[59] <= 0;
        coeffs_regs[60] <= 0;
        coeffs_regs[61] <= 0;
        coeffs_regs[62] <= 0;
        coeffs_regs[63] <= 0;
        coeffs_regs[64] <= 0;
        coeffs_regs[65] <= 0;
        coeffs_regs[66] <= 0;
        coeffs_regs[67] <= 0;
        coeffs_regs[68] <= 0;
        coeffs_regs[69] <= 0;
        coeffs_regs[70] <= 0;
        coeffs_regs[71] <= 0;
        coeffs_regs[72] <= 0;
        coeffs_regs[73] <= 0;
        coeffs_regs[74] <= 0;
        coeffs_regs[75] <= 0;
        coeffs_regs[76] <= 0;
        coeffs_regs[77] <= 0;
        coeffs_regs[78] <= 0;
        coeffs_regs[79] <= 0;
        coeffs_regs[80] <= 0;
        coeffs_regs[81] <= 0;
        coeffs_regs[82] <= 0;
        coeffs_regs[83] <= 0;
        coeffs_regs[84] <= 0;
        coeffs_regs[85] <= 0;
        coeffs_regs[86] <= 0;
        coeffs_regs[87] <= 0;
        coeffs_regs[88] <= 0;
        coeffs_regs[89] <= 0;
        coeffs_regs[90] <= 0;
        coeffs_regs[91] <= 0;
        coeffs_regs[92] <= 0;
        coeffs_regs[93] <= 0;
        coeffs_regs[94] <= 0;
        coeffs_regs[95] <= 0;
        coeffs_regs[96] <= 0;
        coeffs_regs[97] <= 0;
        coeffs_regs[98] <= 0;
        coeffs_regs[99] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          coeffs_regs[0] <= coeffs_temp[0];
          coeffs_regs[1] <= coeffs_temp[1];
          coeffs_regs[2] <= coeffs_temp[2];
          coeffs_regs[3] <= coeffs_temp[3];
          coeffs_regs[4] <= coeffs_temp[4];
          coeffs_regs[5] <= coeffs_temp[5];
          coeffs_regs[6] <= coeffs_temp[6];
          coeffs_regs[7] <= coeffs_temp[7];
          coeffs_regs[8] <= coeffs_temp[8];
          coeffs_regs[9] <= coeffs_temp[9];
          coeffs_regs[10] <= coeffs_temp[10];
          coeffs_regs[11] <= coeffs_temp[11];
          coeffs_regs[12] <= coeffs_temp[12];
          coeffs_regs[13] <= coeffs_temp[13];
          coeffs_regs[14] <= coeffs_temp[14];
          coeffs_regs[15] <= coeffs_temp[15];
          coeffs_regs[16] <= coeffs_temp[16];
          coeffs_regs[17] <= coeffs_temp[17];
          coeffs_regs[18] <= coeffs_temp[18];
          coeffs_regs[19] <= coeffs_temp[19];
          coeffs_regs[20] <= coeffs_temp[20];
          coeffs_regs[21] <= coeffs_temp[21];
          coeffs_regs[22] <= coeffs_temp[22];
          coeffs_regs[23] <= coeffs_temp[23];
          coeffs_regs[24] <= coeffs_temp[24];
          coeffs_regs[25] <= coeffs_temp[25];
          coeffs_regs[26] <= coeffs_temp[26];
          coeffs_regs[27] <= coeffs_temp[27];
          coeffs_regs[28] <= coeffs_temp[28];
          coeffs_regs[29] <= coeffs_temp[29];
          coeffs_regs[30] <= coeffs_temp[30];
          coeffs_regs[31] <= coeffs_temp[31];
          coeffs_regs[32] <= coeffs_temp[32];
          coeffs_regs[33] <= coeffs_temp[33];
          coeffs_regs[34] <= coeffs_temp[34];
          coeffs_regs[35] <= coeffs_temp[35];
          coeffs_regs[36] <= coeffs_temp[36];
          coeffs_regs[37] <= coeffs_temp[37];
          coeffs_regs[38] <= coeffs_temp[38];
          coeffs_regs[39] <= coeffs_temp[39];
          coeffs_regs[40] <= coeffs_temp[40];
          coeffs_regs[41] <= coeffs_temp[41];
          coeffs_regs[42] <= coeffs_temp[42];
          coeffs_regs[43] <= coeffs_temp[43];
          coeffs_regs[44] <= coeffs_temp[44];
          coeffs_regs[45] <= coeffs_temp[45];
          coeffs_regs[46] <= coeffs_temp[46];
          coeffs_regs[47] <= coeffs_temp[47];
          coeffs_regs[48] <= coeffs_temp[48];
          coeffs_regs[49] <= coeffs_temp[49];
          coeffs_regs[50] <= coeffs_temp[50];
          coeffs_regs[51] <= coeffs_temp[51];
          coeffs_regs[52] <= coeffs_temp[52];
          coeffs_regs[53] <= coeffs_temp[53];
          coeffs_regs[54] <= coeffs_temp[54];
          coeffs_regs[55] <= coeffs_temp[55];
          coeffs_regs[56] <= coeffs_temp[56];
          coeffs_regs[57] <= coeffs_temp[57];
          coeffs_regs[58] <= coeffs_temp[58];
          coeffs_regs[59] <= coeffs_temp[59];
          coeffs_regs[60] <= coeffs_temp[60];
          coeffs_regs[61] <= coeffs_temp[61];
          coeffs_regs[62] <= coeffs_temp[62];
          coeffs_regs[63] <= coeffs_temp[63];
          coeffs_regs[64] <= coeffs_temp[64];
          coeffs_regs[65] <= coeffs_temp[65];
          coeffs_regs[66] <= coeffs_temp[66];
          coeffs_regs[67] <= coeffs_temp[67];
          coeffs_regs[68] <= coeffs_temp[68];
          coeffs_regs[69] <= coeffs_temp[69];
          coeffs_regs[70] <= coeffs_temp[70];
          coeffs_regs[71] <= coeffs_temp[71];
          coeffs_regs[72] <= coeffs_temp[72];
          coeffs_regs[73] <= coeffs_temp[73];
          coeffs_regs[74] <= coeffs_temp[74];
          coeffs_regs[75] <= coeffs_temp[75];
          coeffs_regs[76] <= coeffs_temp[76];
          coeffs_regs[77] <= coeffs_temp[77];
          coeffs_regs[78] <= coeffs_temp[78];
          coeffs_regs[79] <= coeffs_temp[79];
          coeffs_regs[80] <= coeffs_temp[80];
          coeffs_regs[81] <= coeffs_temp[81];
          coeffs_regs[82] <= coeffs_temp[82];
          coeffs_regs[83] <= coeffs_temp[83];
          coeffs_regs[84] <= coeffs_temp[84];
          coeffs_regs[85] <= coeffs_temp[85];
          coeffs_regs[86] <= coeffs_temp[86];
          coeffs_regs[87] <= coeffs_temp[87];
          coeffs_regs[88] <= coeffs_temp[88];
          coeffs_regs[89] <= coeffs_temp[89];
          coeffs_regs[90] <= coeffs_temp[90];
          coeffs_regs[91] <= coeffs_temp[91];
          coeffs_regs[92] <= coeffs_temp[92];
          coeffs_regs[93] <= coeffs_temp[93];
          coeffs_regs[94] <= coeffs_temp[94];
          coeffs_regs[95] <= coeffs_temp[95];
          coeffs_regs[96] <= coeffs_temp[96];
          coeffs_regs[97] <= coeffs_temp[97];
          coeffs_regs[98] <= coeffs_temp[98];
          coeffs_regs[99] <= coeffs_temp[99];
        end
      end
    end // Coeffs_Registers_process

  always @ (posedge clk or posedge reset)
    begin: Coeffs_Shadow_Regs_process
      if (reset == 1'b1) begin
        coeffs_shadow[0] <= 0;
        coeffs_shadow[1] <= 0;
        coeffs_shadow[2] <= 0;
        coeffs_shadow[3] <= 0;
        coeffs_shadow[4] <= 0;
        coeffs_shadow[5] <= 0;
        coeffs_shadow[6] <= 0;
        coeffs_shadow[7] <= 0;
        coeffs_shadow[8] <= 0;
        coeffs_shadow[9] <= 0;
        coeffs_shadow[10] <= 0;
        coeffs_shadow[11] <= 0;
        coeffs_shadow[12] <= 0;
        coeffs_shadow[13] <= 0;
        coeffs_shadow[14] <= 0;
        coeffs_shadow[15] <= 0;
        coeffs_shadow[16] <= 0;
        coeffs_shadow[17] <= 0;
        coeffs_shadow[18] <= 0;
        coeffs_shadow[19] <= 0;
        coeffs_shadow[20] <= 0;
        coeffs_shadow[21] <= 0;
        coeffs_shadow[22] <= 0;
        coeffs_shadow[23] <= 0;
        coeffs_shadow[24] <= 0;
        coeffs_shadow[25] <= 0;
        coeffs_shadow[26] <= 0;
        coeffs_shadow[27] <= 0;
        coeffs_shadow[28] <= 0;
        coeffs_shadow[29] <= 0;
        coeffs_shadow[30] <= 0;
        coeffs_shadow[31] <= 0;
        coeffs_shadow[32] <= 0;
        coeffs_shadow[33] <= 0;
        coeffs_shadow[34] <= 0;
        coeffs_shadow[35] <= 0;
        coeffs_shadow[36] <= 0;
        coeffs_shadow[37] <= 0;
        coeffs_shadow[38] <= 0;
        coeffs_shadow[39] <= 0;
        coeffs_shadow[40] <= 0;
        coeffs_shadow[41] <= 0;
        coeffs_shadow[42] <= 0;
        coeffs_shadow[43] <= 0;
        coeffs_shadow[44] <= 0;
        coeffs_shadow[45] <= 0;
        coeffs_shadow[46] <= 0;
        coeffs_shadow[47] <= 0;
        coeffs_shadow[48] <= 0;
        coeffs_shadow[49] <= 0;
        coeffs_shadow[50] <= 0;
        coeffs_shadow[51] <= 0;
        coeffs_shadow[52] <= 0;
        coeffs_shadow[53] <= 0;
        coeffs_shadow[54] <= 0;
        coeffs_shadow[55] <= 0;
        coeffs_shadow[56] <= 0;
        coeffs_shadow[57] <= 0;
        coeffs_shadow[58] <= 0;
        coeffs_shadow[59] <= 0;
        coeffs_shadow[60] <= 0;
        coeffs_shadow[61] <= 0;
        coeffs_shadow[62] <= 0;
        coeffs_shadow[63] <= 0;
        coeffs_shadow[64] <= 0;
        coeffs_shadow[65] <= 0;
        coeffs_shadow[66] <= 0;
        coeffs_shadow[67] <= 0;
        coeffs_shadow[68] <= 0;
        coeffs_shadow[69] <= 0;
        coeffs_shadow[70] <= 0;
        coeffs_shadow[71] <= 0;
        coeffs_shadow[72] <= 0;
        coeffs_shadow[73] <= 0;
        coeffs_shadow[74] <= 0;
        coeffs_shadow[75] <= 0;
        coeffs_shadow[76] <= 0;
        coeffs_shadow[77] <= 0;
        coeffs_shadow[78] <= 0;
        coeffs_shadow[79] <= 0;
        coeffs_shadow[80] <= 0;
        coeffs_shadow[81] <= 0;
        coeffs_shadow[82] <= 0;
        coeffs_shadow[83] <= 0;
        coeffs_shadow[84] <= 0;
        coeffs_shadow[85] <= 0;
        coeffs_shadow[86] <= 0;
        coeffs_shadow[87] <= 0;
        coeffs_shadow[88] <= 0;
        coeffs_shadow[89] <= 0;
        coeffs_shadow[90] <= 0;
        coeffs_shadow[91] <= 0;
        coeffs_shadow[92] <= 0;
        coeffs_shadow[93] <= 0;
        coeffs_shadow[94] <= 0;
        coeffs_shadow[95] <= 0;
        coeffs_shadow[96] <= 0;
        coeffs_shadow[97] <= 0;
        coeffs_shadow[98] <= 0;
        coeffs_shadow[99] <= 0;
      end
      else begin
        if (write_done_reg == 1'b1) begin
          coeffs_shadow[0] <= coeffs_regs[0];
          coeffs_shadow[1] <= coeffs_regs[1];
          coeffs_shadow[2] <= coeffs_regs[2];
          coeffs_shadow[3] <= coeffs_regs[3];
          coeffs_shadow[4] <= coeffs_regs[4];
          coeffs_shadow[5] <= coeffs_regs[5];
          coeffs_shadow[6] <= coeffs_regs[6];
          coeffs_shadow[7] <= coeffs_regs[7];
          coeffs_shadow[8] <= coeffs_regs[8];
          coeffs_shadow[9] <= coeffs_regs[9];
          coeffs_shadow[10] <= coeffs_regs[10];
          coeffs_shadow[11] <= coeffs_regs[11];
          coeffs_shadow[12] <= coeffs_regs[12];
          coeffs_shadow[13] <= coeffs_regs[13];
          coeffs_shadow[14] <= coeffs_regs[14];
          coeffs_shadow[15] <= coeffs_regs[15];
          coeffs_shadow[16] <= coeffs_regs[16];
          coeffs_shadow[17] <= coeffs_regs[17];
          coeffs_shadow[18] <= coeffs_regs[18];
          coeffs_shadow[19] <= coeffs_regs[19];
          coeffs_shadow[20] <= coeffs_regs[20];
          coeffs_shadow[21] <= coeffs_regs[21];
          coeffs_shadow[22] <= coeffs_regs[22];
          coeffs_shadow[23] <= coeffs_regs[23];
          coeffs_shadow[24] <= coeffs_regs[24];
          coeffs_shadow[25] <= coeffs_regs[25];
          coeffs_shadow[26] <= coeffs_regs[26];
          coeffs_shadow[27] <= coeffs_regs[27];
          coeffs_shadow[28] <= coeffs_regs[28];
          coeffs_shadow[29] <= coeffs_regs[29];
          coeffs_shadow[30] <= coeffs_regs[30];
          coeffs_shadow[31] <= coeffs_regs[31];
          coeffs_shadow[32] <= coeffs_regs[32];
          coeffs_shadow[33] <= coeffs_regs[33];
          coeffs_shadow[34] <= coeffs_regs[34];
          coeffs_shadow[35] <= coeffs_regs[35];
          coeffs_shadow[36] <= coeffs_regs[36];
          coeffs_shadow[37] <= coeffs_regs[37];
          coeffs_shadow[38] <= coeffs_regs[38];
          coeffs_shadow[39] <= coeffs_regs[39];
          coeffs_shadow[40] <= coeffs_regs[40];
          coeffs_shadow[41] <= coeffs_regs[41];
          coeffs_shadow[42] <= coeffs_regs[42];
          coeffs_shadow[43] <= coeffs_regs[43];
          coeffs_shadow[44] <= coeffs_regs[44];
          coeffs_shadow[45] <= coeffs_regs[45];
          coeffs_shadow[46] <= coeffs_regs[46];
          coeffs_shadow[47] <= coeffs_regs[47];
          coeffs_shadow[48] <= coeffs_regs[48];
          coeffs_shadow[49] <= coeffs_regs[49];
          coeffs_shadow[50] <= coeffs_regs[50];
          coeffs_shadow[51] <= coeffs_regs[51];
          coeffs_shadow[52] <= coeffs_regs[52];
          coeffs_shadow[53] <= coeffs_regs[53];
          coeffs_shadow[54] <= coeffs_regs[54];
          coeffs_shadow[55] <= coeffs_regs[55];
          coeffs_shadow[56] <= coeffs_regs[56];
          coeffs_shadow[57] <= coeffs_regs[57];
          coeffs_shadow[58] <= coeffs_regs[58];
          coeffs_shadow[59] <= coeffs_regs[59];
          coeffs_shadow[60] <= coeffs_regs[60];
          coeffs_shadow[61] <= coeffs_regs[61];
          coeffs_shadow[62] <= coeffs_regs[62];
          coeffs_shadow[63] <= coeffs_regs[63];
          coeffs_shadow[64] <= coeffs_regs[64];
          coeffs_shadow[65] <= coeffs_regs[65];
          coeffs_shadow[66] <= coeffs_regs[66];
          coeffs_shadow[67] <= coeffs_regs[67];
          coeffs_shadow[68] <= coeffs_regs[68];
          coeffs_shadow[69] <= coeffs_regs[69];
          coeffs_shadow[70] <= coeffs_regs[70];
          coeffs_shadow[71] <= coeffs_regs[71];
          coeffs_shadow[72] <= coeffs_regs[72];
          coeffs_shadow[73] <= coeffs_regs[73];
          coeffs_shadow[74] <= coeffs_regs[74];
          coeffs_shadow[75] <= coeffs_regs[75];
          coeffs_shadow[76] <= coeffs_regs[76];
          coeffs_shadow[77] <= coeffs_regs[77];
          coeffs_shadow[78] <= coeffs_regs[78];
          coeffs_shadow[79] <= coeffs_regs[79];
          coeffs_shadow[80] <= coeffs_regs[80];
          coeffs_shadow[81] <= coeffs_regs[81];
          coeffs_shadow[82] <= coeffs_regs[82];
          coeffs_shadow[83] <= coeffs_regs[83];
          coeffs_shadow[84] <= coeffs_regs[84];
          coeffs_shadow[85] <= coeffs_regs[85];
          coeffs_shadow[86] <= coeffs_regs[86];
          coeffs_shadow[87] <= coeffs_regs[87];
          coeffs_shadow[88] <= coeffs_regs[88];
          coeffs_shadow[89] <= coeffs_regs[89];
          coeffs_shadow[90] <= coeffs_regs[90];
          coeffs_shadow[91] <= coeffs_regs[91];
          coeffs_shadow[92] <= coeffs_regs[92];
          coeffs_shadow[93] <= coeffs_regs[93];
          coeffs_shadow[94] <= coeffs_regs[94];
          coeffs_shadow[95] <= coeffs_regs[95];
          coeffs_shadow[96] <= coeffs_regs[96];
          coeffs_shadow[97] <= coeffs_regs[97];
          coeffs_shadow[98] <= coeffs_regs[98];
          coeffs_shadow[99] <= coeffs_regs[99];
        end
      end
    end // Coeffs_Shadow_Regs_process

  assign product100 = delay_pipeline[99] * coeffs_shadow[99];

  assign product99 = delay_pipeline[98] * coeffs_shadow[98];

  assign product98 = delay_pipeline[97] * coeffs_shadow[97];

  assign product97 = delay_pipeline[96] * coeffs_shadow[96];

  assign product96 = delay_pipeline[95] * coeffs_shadow[95];

  assign product95 = delay_pipeline[94] * coeffs_shadow[94];

  assign product94 = delay_pipeline[93] * coeffs_shadow[93];

  assign product93 = delay_pipeline[92] * coeffs_shadow[92];

  assign product92 = delay_pipeline[91] * coeffs_shadow[91];

  assign product91 = delay_pipeline[90] * coeffs_shadow[90];

  assign product90 = delay_pipeline[89] * coeffs_shadow[89];

  assign product89 = delay_pipeline[88] * coeffs_shadow[88];

  assign product88 = delay_pipeline[87] * coeffs_shadow[87];

  assign product87 = delay_pipeline[86] * coeffs_shadow[86];

  assign product86 = delay_pipeline[85] * coeffs_shadow[85];

  assign product85 = delay_pipeline[84] * coeffs_shadow[84];

  assign product84 = delay_pipeline[83] * coeffs_shadow[83];

  assign product83 = delay_pipeline[82] * coeffs_shadow[82];

  assign product82 = delay_pipeline[81] * coeffs_shadow[81];

  assign product81 = delay_pipeline[80] * coeffs_shadow[80];

  assign product80 = delay_pipeline[79] * coeffs_shadow[79];

  assign product79 = delay_pipeline[78] * coeffs_shadow[78];

  assign product78 = delay_pipeline[77] * coeffs_shadow[77];

  assign product77 = delay_pipeline[76] * coeffs_shadow[76];

  assign product76 = delay_pipeline[75] * coeffs_shadow[75];

  assign product75 = delay_pipeline[74] * coeffs_shadow[74];

  assign product74 = delay_pipeline[73] * coeffs_shadow[73];

  assign product73 = delay_pipeline[72] * coeffs_shadow[72];

  assign product72 = delay_pipeline[71] * coeffs_shadow[71];

  assign product71 = delay_pipeline[70] * coeffs_shadow[70];

  assign product70 = delay_pipeline[69] * coeffs_shadow[69];

  assign product69 = delay_pipeline[68] * coeffs_shadow[68];

  assign product68 = delay_pipeline[67] * coeffs_shadow[67];

  assign product67 = delay_pipeline[66] * coeffs_shadow[66];

  assign product66 = delay_pipeline[65] * coeffs_shadow[65];

  assign product65 = delay_pipeline[64] * coeffs_shadow[64];

  assign product64 = delay_pipeline[63] * coeffs_shadow[63];

  assign product63 = delay_pipeline[62] * coeffs_shadow[62];

  assign product62 = delay_pipeline[61] * coeffs_shadow[61];

  assign product61 = delay_pipeline[60] * coeffs_shadow[60];

  assign product60 = delay_pipeline[59] * coeffs_shadow[59];

  assign product59 = delay_pipeline[58] * coeffs_shadow[58];

  assign product58 = delay_pipeline[57] * coeffs_shadow[57];

  assign product57 = delay_pipeline[56] * coeffs_shadow[56];

  assign product56 = delay_pipeline[55] * coeffs_shadow[55];

  assign product55 = delay_pipeline[54] * coeffs_shadow[54];

  assign product54 = delay_pipeline[53] * coeffs_shadow[53];

  assign product53 = delay_pipeline[52] * coeffs_shadow[52];

  assign product52 = delay_pipeline[51] * coeffs_shadow[51];

  assign product51 = delay_pipeline[50] * coeffs_shadow[50];

  assign product50 = delay_pipeline[49] * coeffs_shadow[49];

  assign product49 = delay_pipeline[48] * coeffs_shadow[48];

  assign product48 = delay_pipeline[47] * coeffs_shadow[47];

  assign product47 = delay_pipeline[46] * coeffs_shadow[46];

  assign product46 = delay_pipeline[45] * coeffs_shadow[45];

  assign product45 = delay_pipeline[44] * coeffs_shadow[44];

  assign product44 = delay_pipeline[43] * coeffs_shadow[43];

  assign product43 = delay_pipeline[42] * coeffs_shadow[42];

  assign product42 = delay_pipeline[41] * coeffs_shadow[41];

  assign product41 = delay_pipeline[40] * coeffs_shadow[40];

  assign product40 = delay_pipeline[39] * coeffs_shadow[39];

  assign product39 = delay_pipeline[38] * coeffs_shadow[38];

  assign product38 = delay_pipeline[37] * coeffs_shadow[37];

  assign product37 = delay_pipeline[36] * coeffs_shadow[36];

  assign product36 = delay_pipeline[35] * coeffs_shadow[35];

  assign product35 = delay_pipeline[34] * coeffs_shadow[34];

  assign product34 = delay_pipeline[33] * coeffs_shadow[33];

  assign product33 = delay_pipeline[32] * coeffs_shadow[32];

  assign product32 = delay_pipeline[31] * coeffs_shadow[31];

  assign product31 = delay_pipeline[30] * coeffs_shadow[30];

  assign product30 = delay_pipeline[29] * coeffs_shadow[29];

  assign product29 = delay_pipeline[28] * coeffs_shadow[28];

  assign product28 = delay_pipeline[27] * coeffs_shadow[27];

  assign product27 = delay_pipeline[26] * coeffs_shadow[26];

  assign product26 = delay_pipeline[25] * coeffs_shadow[25];

  assign product25 = delay_pipeline[24] * coeffs_shadow[24];

  assign product24 = delay_pipeline[23] * coeffs_shadow[23];

  assign product23 = delay_pipeline[22] * coeffs_shadow[22];

  assign product22 = delay_pipeline[21] * coeffs_shadow[21];

  assign product21 = delay_pipeline[20] * coeffs_shadow[20];

  assign product20 = delay_pipeline[19] * coeffs_shadow[19];

  assign product19 = delay_pipeline[18] * coeffs_shadow[18];

  assign product18 = delay_pipeline[17] * coeffs_shadow[17];

  assign product17 = delay_pipeline[16] * coeffs_shadow[16];

  assign product16 = delay_pipeline[15] * coeffs_shadow[15];

  assign product15 = delay_pipeline[14] * coeffs_shadow[14];

  assign product14 = delay_pipeline[13] * coeffs_shadow[13];

  assign product13 = delay_pipeline[12] * coeffs_shadow[12];

  assign product12 = delay_pipeline[11] * coeffs_shadow[11];

  assign product11 = delay_pipeline[10] * coeffs_shadow[10];

  assign product10 = delay_pipeline[9] * coeffs_shadow[9];

  assign product9 = delay_pipeline[8] * coeffs_shadow[8];

  assign product8 = delay_pipeline[7] * coeffs_shadow[7];

  assign product7 = delay_pipeline[6] * coeffs_shadow[6];

  assign product6 = delay_pipeline[5] * coeffs_shadow[5];

  assign product5 = delay_pipeline[4] * coeffs_shadow[4];

  assign product4 = delay_pipeline[3] * coeffs_shadow[3];

  assign product3 = delay_pipeline[2] * coeffs_shadow[2];

  assign product2 = delay_pipeline[1] * coeffs_shadow[1];

  assign product1_cast = $signed({{7{product1[27]}}, product1});

  assign product1 = delay_pipeline[0] * coeffs_shadow[0];

  assign add_signext = product1_cast;
  assign add_signext_1 = $signed({{7{product2[27]}}, product2});
  assign add_temp = add_signext + add_signext_1;
  assign sum1 = add_temp[34:0];

  assign add_signext_2 = sum1;
  assign add_signext_3 = $signed({{7{product3[27]}}, product3});
  assign add_temp_1 = add_signext_2 + add_signext_3;
  assign sum2 = add_temp_1[34:0];

  assign add_signext_4 = sum2;
  assign add_signext_5 = $signed({{7{product4[27]}}, product4});
  assign add_temp_2 = add_signext_4 + add_signext_5;
  assign sum3 = add_temp_2[34:0];

  assign add_signext_6 = sum3;
  assign add_signext_7 = $signed({{7{product5[27]}}, product5});
  assign add_temp_3 = add_signext_6 + add_signext_7;
  assign sum4 = add_temp_3[34:0];

  assign add_signext_8 = sum4;
  assign add_signext_9 = $signed({{7{product6[27]}}, product6});
  assign add_temp_4 = add_signext_8 + add_signext_9;
  assign sum5 = add_temp_4[34:0];

  assign add_signext_10 = sum5;
  assign add_signext_11 = $signed({{7{product7[27]}}, product7});
  assign add_temp_5 = add_signext_10 + add_signext_11;
  assign sum6 = add_temp_5[34:0];

  assign add_signext_12 = sum6;
  assign add_signext_13 = $signed({{7{product8[27]}}, product8});
  assign add_temp_6 = add_signext_12 + add_signext_13;
  assign sum7 = add_temp_6[34:0];

  assign add_signext_14 = sum7;
  assign add_signext_15 = $signed({{7{product9[27]}}, product9});
  assign add_temp_7 = add_signext_14 + add_signext_15;
  assign sum8 = add_temp_7[34:0];

  assign add_signext_16 = sum8;
  assign add_signext_17 = $signed({{7{product10[27]}}, product10});
  assign add_temp_8 = add_signext_16 + add_signext_17;
  assign sum9 = add_temp_8[34:0];

  assign add_signext_18 = sum9;
  assign add_signext_19 = $signed({{7{product11[27]}}, product11});
  assign add_temp_9 = add_signext_18 + add_signext_19;
  assign sum10 = add_temp_9[34:0];

  assign add_signext_20 = sum10;
  assign add_signext_21 = $signed({{7{product12[27]}}, product12});
  assign add_temp_10 = add_signext_20 + add_signext_21;
  assign sum11 = add_temp_10[34:0];

  assign add_signext_22 = sum11;
  assign add_signext_23 = $signed({{7{product13[27]}}, product13});
  assign add_temp_11 = add_signext_22 + add_signext_23;
  assign sum12 = add_temp_11[34:0];

  assign add_signext_24 = sum12;
  assign add_signext_25 = $signed({{7{product14[27]}}, product14});
  assign add_temp_12 = add_signext_24 + add_signext_25;
  assign sum13 = add_temp_12[34:0];

  assign add_signext_26 = sum13;
  assign add_signext_27 = $signed({{7{product15[27]}}, product15});
  assign add_temp_13 = add_signext_26 + add_signext_27;
  assign sum14 = add_temp_13[34:0];

  assign add_signext_28 = sum14;
  assign add_signext_29 = $signed({{7{product16[27]}}, product16});
  assign add_temp_14 = add_signext_28 + add_signext_29;
  assign sum15 = add_temp_14[34:0];

  assign add_signext_30 = sum15;
  assign add_signext_31 = $signed({{7{product17[27]}}, product17});
  assign add_temp_15 = add_signext_30 + add_signext_31;
  assign sum16 = add_temp_15[34:0];

  assign add_signext_32 = sum16;
  assign add_signext_33 = $signed({{7{product18[27]}}, product18});
  assign add_temp_16 = add_signext_32 + add_signext_33;
  assign sum17 = add_temp_16[34:0];

  assign add_signext_34 = sum17;
  assign add_signext_35 = $signed({{7{product19[27]}}, product19});
  assign add_temp_17 = add_signext_34 + add_signext_35;
  assign sum18 = add_temp_17[34:0];

  assign add_signext_36 = sum18;
  assign add_signext_37 = $signed({{7{product20[27]}}, product20});
  assign add_temp_18 = add_signext_36 + add_signext_37;
  assign sum19 = add_temp_18[34:0];

  assign add_signext_38 = sum19;
  assign add_signext_39 = $signed({{7{product21[27]}}, product21});
  assign add_temp_19 = add_signext_38 + add_signext_39;
  assign sum20 = add_temp_19[34:0];

  assign add_signext_40 = sum20;
  assign add_signext_41 = $signed({{7{product22[27]}}, product22});
  assign add_temp_20 = add_signext_40 + add_signext_41;
  assign sum21 = add_temp_20[34:0];

  assign add_signext_42 = sum21;
  assign add_signext_43 = $signed({{7{product23[27]}}, product23});
  assign add_temp_21 = add_signext_42 + add_signext_43;
  assign sum22 = add_temp_21[34:0];

  assign add_signext_44 = sum22;
  assign add_signext_45 = $signed({{7{product24[27]}}, product24});
  assign add_temp_22 = add_signext_44 + add_signext_45;
  assign sum23 = add_temp_22[34:0];

  assign add_signext_46 = sum23;
  assign add_signext_47 = $signed({{7{product25[27]}}, product25});
  assign add_temp_23 = add_signext_46 + add_signext_47;
  assign sum24 = add_temp_23[34:0];

  assign add_signext_48 = sum24;
  assign add_signext_49 = $signed({{7{product26[27]}}, product26});
  assign add_temp_24 = add_signext_48 + add_signext_49;
  assign sum25 = add_temp_24[34:0];

  assign add_signext_50 = sum25;
  assign add_signext_51 = $signed({{7{product27[27]}}, product27});
  assign add_temp_25 = add_signext_50 + add_signext_51;
  assign sum26 = add_temp_25[34:0];

  assign add_signext_52 = sum26;
  assign add_signext_53 = $signed({{7{product28[27]}}, product28});
  assign add_temp_26 = add_signext_52 + add_signext_53;
  assign sum27 = add_temp_26[34:0];

  assign add_signext_54 = sum27;
  assign add_signext_55 = $signed({{7{product29[27]}}, product29});
  assign add_temp_27 = add_signext_54 + add_signext_55;
  assign sum28 = add_temp_27[34:0];

  assign add_signext_56 = sum28;
  assign add_signext_57 = $signed({{7{product30[27]}}, product30});
  assign add_temp_28 = add_signext_56 + add_signext_57;
  assign sum29 = add_temp_28[34:0];

  assign add_signext_58 = sum29;
  assign add_signext_59 = $signed({{7{product31[27]}}, product31});
  assign add_temp_29 = add_signext_58 + add_signext_59;
  assign sum30 = add_temp_29[34:0];

  assign add_signext_60 = sum30;
  assign add_signext_61 = $signed({{7{product32[27]}}, product32});
  assign add_temp_30 = add_signext_60 + add_signext_61;
  assign sum31 = add_temp_30[34:0];

  assign add_signext_62 = sum31;
  assign add_signext_63 = $signed({{7{product33[27]}}, product33});
  assign add_temp_31 = add_signext_62 + add_signext_63;
  assign sum32 = add_temp_31[34:0];

  assign add_signext_64 = sum32;
  assign add_signext_65 = $signed({{7{product34[27]}}, product34});
  assign add_temp_32 = add_signext_64 + add_signext_65;
  assign sum33 = add_temp_32[34:0];

  assign add_signext_66 = sum33;
  assign add_signext_67 = $signed({{7{product35[27]}}, product35});
  assign add_temp_33 = add_signext_66 + add_signext_67;
  assign sum34 = add_temp_33[34:0];

  assign add_signext_68 = sum34;
  assign add_signext_69 = $signed({{7{product36[27]}}, product36});
  assign add_temp_34 = add_signext_68 + add_signext_69;
  assign sum35 = add_temp_34[34:0];

  assign add_signext_70 = sum35;
  assign add_signext_71 = $signed({{7{product37[27]}}, product37});
  assign add_temp_35 = add_signext_70 + add_signext_71;
  assign sum36 = add_temp_35[34:0];

  assign add_signext_72 = sum36;
  assign add_signext_73 = $signed({{7{product38[27]}}, product38});
  assign add_temp_36 = add_signext_72 + add_signext_73;
  assign sum37 = add_temp_36[34:0];

  assign add_signext_74 = sum37;
  assign add_signext_75 = $signed({{7{product39[27]}}, product39});
  assign add_temp_37 = add_signext_74 + add_signext_75;
  assign sum38 = add_temp_37[34:0];

  assign add_signext_76 = sum38;
  assign add_signext_77 = $signed({{7{product40[27]}}, product40});
  assign add_temp_38 = add_signext_76 + add_signext_77;
  assign sum39 = add_temp_38[34:0];

  assign add_signext_78 = sum39;
  assign add_signext_79 = $signed({{7{product41[27]}}, product41});
  assign add_temp_39 = add_signext_78 + add_signext_79;
  assign sum40 = add_temp_39[34:0];

  assign add_signext_80 = sum40;
  assign add_signext_81 = $signed({{7{product42[27]}}, product42});
  assign add_temp_40 = add_signext_80 + add_signext_81;
  assign sum41 = add_temp_40[34:0];

  assign add_signext_82 = sum41;
  assign add_signext_83 = $signed({{7{product43[27]}}, product43});
  assign add_temp_41 = add_signext_82 + add_signext_83;
  assign sum42 = add_temp_41[34:0];

  assign add_signext_84 = sum42;
  assign add_signext_85 = $signed({{7{product44[27]}}, product44});
  assign add_temp_42 = add_signext_84 + add_signext_85;
  assign sum43 = add_temp_42[34:0];

  assign add_signext_86 = sum43;
  assign add_signext_87 = $signed({{7{product45[27]}}, product45});
  assign add_temp_43 = add_signext_86 + add_signext_87;
  assign sum44 = add_temp_43[34:0];

  assign add_signext_88 = sum44;
  assign add_signext_89 = $signed({{7{product46[27]}}, product46});
  assign add_temp_44 = add_signext_88 + add_signext_89;
  assign sum45 = add_temp_44[34:0];

  assign add_signext_90 = sum45;
  assign add_signext_91 = $signed({{7{product47[27]}}, product47});
  assign add_temp_45 = add_signext_90 + add_signext_91;
  assign sum46 = add_temp_45[34:0];

  assign add_signext_92 = sum46;
  assign add_signext_93 = $signed({{7{product48[27]}}, product48});
  assign add_temp_46 = add_signext_92 + add_signext_93;
  assign sum47 = add_temp_46[34:0];

  assign add_signext_94 = sum47;
  assign add_signext_95 = $signed({{7{product49[27]}}, product49});
  assign add_temp_47 = add_signext_94 + add_signext_95;
  assign sum48 = add_temp_47[34:0];

  assign add_signext_96 = sum48;
  assign add_signext_97 = $signed({{7{product50[27]}}, product50});
  assign add_temp_48 = add_signext_96 + add_signext_97;
  assign sum49 = add_temp_48[34:0];

  assign add_signext_98 = sum49;
  assign add_signext_99 = $signed({{7{product51[27]}}, product51});
  assign add_temp_49 = add_signext_98 + add_signext_99;
  assign sum50 = add_temp_49[34:0];

  assign add_signext_100 = sum50;
  assign add_signext_101 = $signed({{7{product52[27]}}, product52});
  assign add_temp_50 = add_signext_100 + add_signext_101;
  assign sum51 = add_temp_50[34:0];

  assign add_signext_102 = sum51;
  assign add_signext_103 = $signed({{7{product53[27]}}, product53});
  assign add_temp_51 = add_signext_102 + add_signext_103;
  assign sum52 = add_temp_51[34:0];

  assign add_signext_104 = sum52;
  assign add_signext_105 = $signed({{7{product54[27]}}, product54});
  assign add_temp_52 = add_signext_104 + add_signext_105;
  assign sum53 = add_temp_52[34:0];

  assign add_signext_106 = sum53;
  assign add_signext_107 = $signed({{7{product55[27]}}, product55});
  assign add_temp_53 = add_signext_106 + add_signext_107;
  assign sum54 = add_temp_53[34:0];

  assign add_signext_108 = sum54;
  assign add_signext_109 = $signed({{7{product56[27]}}, product56});
  assign add_temp_54 = add_signext_108 + add_signext_109;
  assign sum55 = add_temp_54[34:0];

  assign add_signext_110 = sum55;
  assign add_signext_111 = $signed({{7{product57[27]}}, product57});
  assign add_temp_55 = add_signext_110 + add_signext_111;
  assign sum56 = add_temp_55[34:0];

  assign add_signext_112 = sum56;
  assign add_signext_113 = $signed({{7{product58[27]}}, product58});
  assign add_temp_56 = add_signext_112 + add_signext_113;
  assign sum57 = add_temp_56[34:0];

  assign add_signext_114 = sum57;
  assign add_signext_115 = $signed({{7{product59[27]}}, product59});
  assign add_temp_57 = add_signext_114 + add_signext_115;
  assign sum58 = add_temp_57[34:0];

  assign add_signext_116 = sum58;
  assign add_signext_117 = $signed({{7{product60[27]}}, product60});
  assign add_temp_58 = add_signext_116 + add_signext_117;
  assign sum59 = add_temp_58[34:0];

  assign add_signext_118 = sum59;
  assign add_signext_119 = $signed({{7{product61[27]}}, product61});
  assign add_temp_59 = add_signext_118 + add_signext_119;
  assign sum60 = add_temp_59[34:0];

  assign add_signext_120 = sum60;
  assign add_signext_121 = $signed({{7{product62[27]}}, product62});
  assign add_temp_60 = add_signext_120 + add_signext_121;
  assign sum61 = add_temp_60[34:0];

  assign add_signext_122 = sum61;
  assign add_signext_123 = $signed({{7{product63[27]}}, product63});
  assign add_temp_61 = add_signext_122 + add_signext_123;
  assign sum62 = add_temp_61[34:0];

  assign add_signext_124 = sum62;
  assign add_signext_125 = $signed({{7{product64[27]}}, product64});
  assign add_temp_62 = add_signext_124 + add_signext_125;
  assign sum63 = add_temp_62[34:0];

  assign add_signext_126 = sum63;
  assign add_signext_127 = $signed({{7{product65[27]}}, product65});
  assign add_temp_63 = add_signext_126 + add_signext_127;
  assign sum64 = add_temp_63[34:0];

  assign add_signext_128 = sum64;
  assign add_signext_129 = $signed({{7{product66[27]}}, product66});
  assign add_temp_64 = add_signext_128 + add_signext_129;
  assign sum65 = add_temp_64[34:0];

  assign add_signext_130 = sum65;
  assign add_signext_131 = $signed({{7{product67[27]}}, product67});
  assign add_temp_65 = add_signext_130 + add_signext_131;
  assign sum66 = add_temp_65[34:0];

  assign add_signext_132 = sum66;
  assign add_signext_133 = $signed({{7{product68[27]}}, product68});
  assign add_temp_66 = add_signext_132 + add_signext_133;
  assign sum67 = add_temp_66[34:0];

  assign add_signext_134 = sum67;
  assign add_signext_135 = $signed({{7{product69[27]}}, product69});
  assign add_temp_67 = add_signext_134 + add_signext_135;
  assign sum68 = add_temp_67[34:0];

  assign add_signext_136 = sum68;
  assign add_signext_137 = $signed({{7{product70[27]}}, product70});
  assign add_temp_68 = add_signext_136 + add_signext_137;
  assign sum69 = add_temp_68[34:0];

  assign add_signext_138 = sum69;
  assign add_signext_139 = $signed({{7{product71[27]}}, product71});
  assign add_temp_69 = add_signext_138 + add_signext_139;
  assign sum70 = add_temp_69[34:0];

  assign add_signext_140 = sum70;
  assign add_signext_141 = $signed({{7{product72[27]}}, product72});
  assign add_temp_70 = add_signext_140 + add_signext_141;
  assign sum71 = add_temp_70[34:0];

  assign add_signext_142 = sum71;
  assign add_signext_143 = $signed({{7{product73[27]}}, product73});
  assign add_temp_71 = add_signext_142 + add_signext_143;
  assign sum72 = add_temp_71[34:0];

  assign add_signext_144 = sum72;
  assign add_signext_145 = $signed({{7{product74[27]}}, product74});
  assign add_temp_72 = add_signext_144 + add_signext_145;
  assign sum73 = add_temp_72[34:0];

  assign add_signext_146 = sum73;
  assign add_signext_147 = $signed({{7{product75[27]}}, product75});
  assign add_temp_73 = add_signext_146 + add_signext_147;
  assign sum74 = add_temp_73[34:0];

  assign add_signext_148 = sum74;
  assign add_signext_149 = $signed({{7{product76[27]}}, product76});
  assign add_temp_74 = add_signext_148 + add_signext_149;
  assign sum75 = add_temp_74[34:0];

  assign add_signext_150 = sum75;
  assign add_signext_151 = $signed({{7{product77[27]}}, product77});
  assign add_temp_75 = add_signext_150 + add_signext_151;
  assign sum76 = add_temp_75[34:0];

  assign add_signext_152 = sum76;
  assign add_signext_153 = $signed({{7{product78[27]}}, product78});
  assign add_temp_76 = add_signext_152 + add_signext_153;
  assign sum77 = add_temp_76[34:0];

  assign add_signext_154 = sum77;
  assign add_signext_155 = $signed({{7{product79[27]}}, product79});
  assign add_temp_77 = add_signext_154 + add_signext_155;
  assign sum78 = add_temp_77[34:0];

  assign add_signext_156 = sum78;
  assign add_signext_157 = $signed({{7{product80[27]}}, product80});
  assign add_temp_78 = add_signext_156 + add_signext_157;
  assign sum79 = add_temp_78[34:0];

  assign add_signext_158 = sum79;
  assign add_signext_159 = $signed({{7{product81[27]}}, product81});
  assign add_temp_79 = add_signext_158 + add_signext_159;
  assign sum80 = add_temp_79[34:0];

  assign add_signext_160 = sum80;
  assign add_signext_161 = $signed({{7{product82[27]}}, product82});
  assign add_temp_80 = add_signext_160 + add_signext_161;
  assign sum81 = add_temp_80[34:0];

  assign add_signext_162 = sum81;
  assign add_signext_163 = $signed({{7{product83[27]}}, product83});
  assign add_temp_81 = add_signext_162 + add_signext_163;
  assign sum82 = add_temp_81[34:0];

  assign add_signext_164 = sum82;
  assign add_signext_165 = $signed({{7{product84[27]}}, product84});
  assign add_temp_82 = add_signext_164 + add_signext_165;
  assign sum83 = add_temp_82[34:0];

  assign add_signext_166 = sum83;
  assign add_signext_167 = $signed({{7{product85[27]}}, product85});
  assign add_temp_83 = add_signext_166 + add_signext_167;
  assign sum84 = add_temp_83[34:0];

  assign add_signext_168 = sum84;
  assign add_signext_169 = $signed({{7{product86[27]}}, product86});
  assign add_temp_84 = add_signext_168 + add_signext_169;
  assign sum85 = add_temp_84[34:0];

  assign add_signext_170 = sum85;
  assign add_signext_171 = $signed({{7{product87[27]}}, product87});
  assign add_temp_85 = add_signext_170 + add_signext_171;
  assign sum86 = add_temp_85[34:0];

  assign add_signext_172 = sum86;
  assign add_signext_173 = $signed({{7{product88[27]}}, product88});
  assign add_temp_86 = add_signext_172 + add_signext_173;
  assign sum87 = add_temp_86[34:0];

  assign add_signext_174 = sum87;
  assign add_signext_175 = $signed({{7{product89[27]}}, product89});
  assign add_temp_87 = add_signext_174 + add_signext_175;
  assign sum88 = add_temp_87[34:0];

  assign add_signext_176 = sum88;
  assign add_signext_177 = $signed({{7{product90[27]}}, product90});
  assign add_temp_88 = add_signext_176 + add_signext_177;
  assign sum89 = add_temp_88[34:0];

  assign add_signext_178 = sum89;
  assign add_signext_179 = $signed({{7{product91[27]}}, product91});
  assign add_temp_89 = add_signext_178 + add_signext_179;
  assign sum90 = add_temp_89[34:0];

  assign add_signext_180 = sum90;
  assign add_signext_181 = $signed({{7{product92[27]}}, product92});
  assign add_temp_90 = add_signext_180 + add_signext_181;
  assign sum91 = add_temp_90[34:0];

  assign add_signext_182 = sum91;
  assign add_signext_183 = $signed({{7{product93[27]}}, product93});
  assign add_temp_91 = add_signext_182 + add_signext_183;
  assign sum92 = add_temp_91[34:0];

  assign add_signext_184 = sum92;
  assign add_signext_185 = $signed({{7{product94[27]}}, product94});
  assign add_temp_92 = add_signext_184 + add_signext_185;
  assign sum93 = add_temp_92[34:0];

  assign add_signext_186 = sum93;
  assign add_signext_187 = $signed({{7{product95[27]}}, product95});
  assign add_temp_93 = add_signext_186 + add_signext_187;
  assign sum94 = add_temp_93[34:0];

  assign add_signext_188 = sum94;
  assign add_signext_189 = $signed({{7{product96[27]}}, product96});
  assign add_temp_94 = add_signext_188 + add_signext_189;
  assign sum95 = add_temp_94[34:0];

  assign add_signext_190 = sum95;
  assign add_signext_191 = $signed({{7{product97[27]}}, product97});
  assign add_temp_95 = add_signext_190 + add_signext_191;
  assign sum96 = add_temp_95[34:0];

  assign add_signext_192 = sum96;
  assign add_signext_193 = $signed({{7{product98[27]}}, product98});
  assign add_temp_96 = add_signext_192 + add_signext_193;
  assign sum97 = add_temp_96[34:0];

  assign add_signext_194 = sum97;
  assign add_signext_195 = $signed({{7{product99[27]}}, product99});
  assign add_temp_97 = add_signext_194 + add_signext_195;
  assign sum98 = add_temp_97[34:0];

  assign add_signext_196 = sum98;
  assign add_signext_197 = $signed({{7{product100[27]}}, product100});
  assign add_temp_98 = add_signext_196 + add_signext_197;
  assign sum99 = add_temp_98[34:0];

  always @ (posedge clk or posedge reset)
    begin: Output_Register_process
      if (reset == 1'b1) begin
        output_register <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          output_register <= sum99;
        end
      end
    end // Output_Register_process

  // Assignment Statements
  assign filter_out = output_register;
endmodule  // FilterProgrammable
