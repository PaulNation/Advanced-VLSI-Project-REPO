import numpy as np

def quantize_fir_taps(coeffs, bits=32):
    # Determine the scaling factor (Q7 format: 1 sign bit, 7 fractional bits)
    scale_factor = 2**(bits - 1)
    
    # Quantize coefficients
    quantized = np.round(coeffs * scale_factor).astype(int)
    
    # Ensure values are within valid range (-128 to 127 for 8-bit signed)
    quantized = np.clip(quantized, -scale_factor, scale_factor - 1)
    
    # Convert back to floating-point for error analysis
    dequantized = quantized / scale_factor
    
    # Compute quantization error
    error = dequantized - coeffs
    
    return quantized, dequantized, error

# Example FIR filter coefficients (low-pass Hamming window)
fir_coeffs = np.array([-0.0002344714816574,-0.0008802052580231,-0.002318805710365,-0.004948113129632,
  -0.009096561220175, -0.01485347089338, -0.02189972884058, -0.02939750742307,
   -0.03600554912571, -0.04006454898325, -0.03995111975181, -0.03453736329533,
   -0.02363716573976,-0.008290763816395,  0.00924416885206,  0.02586007654729,
    0.03828543699839,  0.04393567915625,  0.04169200573622,  0.03235429572962,
    0.01857975092013, 0.004260530772626,-0.006529613868664, -0.01073049313247,
  -0.007264145796672, 0.002557484655313,  0.01536536993737,  0.02675627207764,
    0.03271616714508,  0.03099400426327,  0.02195465492181, 0.008580228937712,
  -0.004441736041508, -0.01229245315236, -0.01175538499158,-0.002508849567255,
    0.01251624551441,  0.02792092834176,  0.03758926819357,   0.0368776589802,
     0.0245174596447,  0.00354422882496, -0.01915678037199, -0.03466223389731,
   -0.03469592974359, -0.01437932804317,  0.02583654739397,  0.07973021393243,
     0.1365902554994,   0.1839127976354,   0.2107548332349,   0.2107548332349,
     0.1839127976354,   0.1365902554994,  0.07973021393243,  0.02583654739397,
   -0.01437932804317, -0.03469592974359, -0.03466223389731, -0.01915678037199,
    0.00354422882496,   0.0245174596447,   0.0368776589802,  0.03758926819357,
    0.02792092834176,  0.01251624551441,-0.002508849567255, -0.01175538499158,
   -0.01229245315236,-0.004441736041508, 0.008580228937712,  0.02195465492181,
    0.03099400426327,  0.03271616714508,  0.02675627207764,  0.01536536993737,
   0.002557484655313,-0.007264145796672, -0.01073049313247,-0.006529613868664,
   0.004260530772626,  0.01857975092013,  0.03235429572962,  0.04169200573622,
    0.04393567915625,  0.03828543699839,  0.02586007654729,  0.00924416885206,
  -0.008290763816395, -0.02363716573976, -0.03453736329533, -0.03995111975181,
   -0.04006454898325, -0.03600554912571, -0.02939750742307, -0.02189972884058,
   -0.01485347089338,-0.009096561220175,-0.004948113129632,-0.002318805710365,
  -0.0008802052580231,-0.0002344714816574])

# Quantize FIR coefficients
quantized_coeffs, dequantized_coeffs, quantization_error = quantize_fir_taps(fir_coeffs)

# Print results
print("Original Coefficients:", fir_coeffs)
print("Quantized Coefficients:", quantized_coeffs)
print("Dequantized Coefficients:", dequantized_coeffs)
print("Quantization Error:", quantization_error)

# Save to files
np.savetxt("fir_coeffs.txt", fir_coeffs, delimiter=", ")
np.savetxt("quantized_coeffs.txt", quantized_coeffs, fmt="%d", delimiter=", ")

# Print results
print("Original Coefficients saved to fir_coeffs.txt")
print("Quantized Coefficients saved to quantized_coeffs.txt")